{"version":3,"file":"component---src-pages-how-i-work-tsx-8143f964d434eebec055.js","mappings":"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","sources":["webpack://side-trail-software-development/./src/components/Accordion.tsx","webpack://side-trail-software-development/./src/sections/AgileSection.tsx","webpack://side-trail-software-development/./src/sections/AboutMeSection.tsx","webpack://side-trail-software-development/./src/pages/how-i-work.tsx"],"sourcesContent":["import * as React from \"react\"\nimport Collapsible from \"./Collapsible\"\nimport Icons from \"../utilities/Icons\"\n\ninterface ItemProperties {\n  summary: string | React.ReactElement\n  children?: string | React.ReactElement | React.ReactElement[]\n}\n\nconst Item = (_props: ItemProperties) => null\n\ninterface RowProperties extends ItemProperties {\n  expanded: boolean\n  onClick: () => void\n}\n\nconst Row = ({ expanded, onClick, summary, children }: RowProperties) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex flex-row gap-2\" onClick={onClick}>\n        <div className=\"flex-1 md:text-xl\">\n          {summary}\n        </div>\n        <div className=\"m-auto text-2xl md:text-3xl text-zinc-300 cursor-pointer transition-transform duration-200\">\n          {expanded\n            ? <Icons.collapse/>\n            : <Icons.expand/>\n          }\n        </div>\n      </div>\n      <Collapsible expanded={expanded}>\n        <div className=\"p-2 text-sm md:text-base\">\n          {children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n\ninterface AccordionProperties {\n  children?: React.ReactElement<ItemProperties>| React.ReactElement<ItemProperties>[]\n}\n\nconst Accordion = ({ children = [] }: AccordionProperties) => {\n  children = Array.isArray(children) ? children : [children]\n  \n  const [expandedIndex, setExpandedIndex] = React.useState<number | null>(null)\n\n  const isExpanded = (index: number) => {\n    return index === expandedIndex\n  }\n  const clickHandler = (index: number) => {\n    if (index === expandedIndex) {\n      setExpandedIndex(null)\n    } else {\n      setExpandedIndex(index)\n    }\n  }\n  return (\n    <div className=\"flex flex-col gap-1\">\n      {children.map((child, i) => <Row key={i} expanded={isExpanded(i)} onClick={() => clickHandler(i)} {...child.props}/>)}\n    </div>\n  )\n}\n\nAccordion.Item = Item\n\nexport default Accordion","import * as React from \"react\"\nimport Accordion from \"../components/Accordion\"\nimport Card from \"../components/Card\"\nimport MDXRenderer from \"../components/MDXRenderer\"\nimport Section from \"../components/Section\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Content from \"../components/Content\"\n\nconst Summary = ({ ordinal, value}: { ordinal: number, value: string }) => {\n  return (\n    <div className=\"flex flex-row gap-3 md:gap-4 items-center min-h-[72px]\">\n      <div className=\"flex flex-col text-center justify-center w-7 h-7 lg:w-10 lg:h-10 p-1 lg:p-2 rounded-lg lg:rounded-xl font-extrabold bg-zinc-500 text-zinc-50\">\n        {ordinal}\n      </div>\n      <div className=\"flex flex-col flex-1 justify-center md:text-lg xl:text-xl 3xl:text-2xl text-center md:text-left\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\nconst AgileSection = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    allFile(\n      filter: {sourceInstanceName: {eq: \"principles\"}}\n      sort: {childMdx: {frontmatter: {slug: ASC}}}\n    ) {\n      nodes {\n        childMdx {\n          id\n          frontmatter {\n            title\n          }\n          body\n        }\n      }\n    }\n  }`\n  )\n\n  return (\n    <Section.Item heading={{\n      title: \"Agile\",\n      subtitle: [\"\\\"Plans are worthless, but planning is everything.\\\"\", \"Dwight D. Eisenhower\"]\n    }}>\n      <Content>\n        <p>\n          The <a href=\"https://agilemanifesto.org/\" target=\"_blank\">Agile Manifesto</a> was created in the early 2000s by prominent members of the software industry.\n          This manifesto is what underpins many of the agile processes common in the software industry today, but I believe these processes misunderstand the intention behind the manifesto.\n        </p>\n        <p>\n          Instead, I choose to follow these principles directly.\n        </p>\n      </Content>\n      <Card heading=\"Principles\">\n        <Accordion>\n          { data.allFile.nodes.map(({ childMdx }: any, i: number) => {\n            const { id, body, frontmatter: { title } } = childMdx\n            return (\n              <Accordion.Item\n                key={id}\n                summary={<Summary ordinal={i + 1} value={title}/>}\n              >\n                <Content>\n                  <MDXRenderer>{body}</MDXRenderer>\n                </Content>\n              </Accordion.Item>\n            )\n          })}\n        </Accordion>\n      </Card>\n    </Section.Item>\n  )\n}\n\nexport default AgileSection","import * as React from \"react\"\nimport Accordion from \"../components/Accordion\"\nimport Card from \"../components/Card\"\nimport Section from \"../components/Section\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { IconType } from \"react-icons\"\nimport Content from \"../components/Content\"\nimport MDXRenderer from \"../components/MDXRenderer\"\nimport Icons from \"../utilities/Icons\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ninterface ValuesQueryResult {\n  allFile: {\n    nodes: {\n      childMdx: {\n        id: string\n        frontmatter: {\n          title: string\n          icon: string\n        }\n        body: string\n      }\n    }[]\n  }\n}\n\nconst Summary = ({ value, icon: Icon }: { value: string, icon: IconType }) => {\n  return (\n    <div className=\"flex flex-row gap-3 md:gap-4 items-center min-h-[72px]\">\n      <div className=\"flex flex-col text-center justify-center w-7 h-7 lg:w-10 lg:h-10 p-1 lg:p-2 rounded-lg lg:rounded-xl font-extrabold bg-zinc-500 text-zinc-50\">\n        <Icon className=\"h-full w-full\"/>\n      </div>\n      <div className=\"flex flex-col flex-1 justify-center md:text-lg xl:text-xl 3xl:text-2xl text-center md:text-left\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\nconst AboutMeSection = () => {\n  const result = useStaticQuery<ValuesQueryResult>(graphql`\n  query {\n    allFile(\n      filter: {sourceInstanceName: {eq: \"values\"}}\n      sort: {childMdx: {frontmatter: {slug: ASC}}}\n    ) {\n      nodes {\n        childMdx {\n          id\n          frontmatter {\n            title\n            icon\n          }\n          body\n        }\n      }\n    }\n  }`\n  )\n\n  console.log(\"Result\", result)\n  \n  return (\n    <Section.Item heading={{\n        title: \"A Little About Me\",\n        subtitle: [\"\\\"The unexamined life is not worth living.\\\"\", \"Socrates\"]\n      }}\n    >\n      <div className=\"flex flex-col gap-8\">\n        <Content className=\"prose-h3:mt-0\">\n          <div className=\"text-center mb-4 lg:float-left lg:mr-8\">\n            <StaticImage src=\"../images/headshot.jpeg\" alt=\"Picture of Spencer Haan with a beautiful beard.\" className=\"w-60 h-60 md:w-80 md:h-80 xl:w-96 xl:h-96 rounded-xl shadow-xl\"/>\n          </div>\n          <h3>\n            Hey, my name is Spencer Haan and I'm Side Trails Software Development!\n          </h3>\n          <p>\n            Guiding principles over following rules. Accuracy over expediency. Long-term thinking over short-term thinking.\n          </p>\n          <p>\n            When I was 10 years old, if you had asked about my career aspirations, I would have eagerly said I wanted to be a video game developer. Little did I know that this path wouldn't necessarily place me in charge of the creative vision. The work-life balance within that industry isn’t ideal, either. Nonetheless, this dream became my guiding North Star.\n          </p>\n          <p>\n            Software development is like a constantly changing puzzle, with each component fitting somewhere within the bigger picture. More often than not, these components are fuzzy rather than well-defined. I enjoy figuring out what these components should be, how they can be made clearer, where they should go, and, most importantly, why they should exist in the first place.\n          </p>\n          <p>\n            I have an insatiable drive to understand interesting and complex problems. Simple problems often mask underlying complexity, and vice versa, so it is my belief that a shared, and deep, understanding of those problems is the path towards effective solutions.\n          </p>\n          <p>\n            Despite my perfectionist nature, I’ve learned that my desire isn’t to make something perfect, but to instead do things properly by following my principles of accuracy, quality, and building for the long-term.\n          </p>\n          <p>\n            I enjoy rebuilding systems and frameworks, envisioning a better, or even the best, versions of themselves. Described as a deep, lateral, and first-principles thinker, I challenge the status quo to better understand and determine if, and how, it needs to change.\n          </p>\n          <p>\n            Ultimately, I’m looking for opportunities to solve problems that I find interesting, and to do so in my own unique and creative way.\n          </p>\n        </Content>\n        <div>\n          <Card heading=\"Values\">\n            <Accordion>\n              {result.allFile.nodes?.map(({ childMdx },) => {\n                return (\n                  <Accordion.Item\n                    key={childMdx.id}\n                    summary={<Summary value={childMdx.frontmatter.title} icon={Icons[childMdx.frontmatter.icon]}/>}\n                  >\n                    <Content>\n                      <MDXRenderer>{childMdx.body}</MDXRenderer>\n                    </Content>\n                  </Accordion.Item>\n                )\n              })}\n            </Accordion>\n          </Card>\n        </div>\n      </div>\n    </Section.Item>\n  )\n}\n\nexport default AboutMeSection","import * as React from \"react\"\nimport { type HeadFC } from \"gatsby\"\nimport Section from \"../components/Section\"\nimport AgileSection from \"../sections/AgileSection\"\nimport AboutMeSection from \"../sections/AboutMeSection\"\n\nconst HowIWorkPage = () => {\n    return (\n    <Section.List>\n      <AboutMeSection/>\n      <Section.Item heading={{\n        title: \"Why Side Trails?\",\n        subtitle: [\"\\\"Seek first to understand, then to be understood\\\"\"]\n      }}>\n      </Section.Item>\n      <AgileSection/>\n    </Section.List>\n  )\n}\n\nexport default HowIWorkPage\n\nexport const Head: HeadFC = () => <title>How I Work - Side Trails Software Development</title>"],"names":["Row","_ref","expanded","onClick","summary","children","React","className","Icons","collapse","expand","Collapsible","Accordion","_ref2","Array","isArray","expandedIndex","setExpandedIndex","map","child","i","key","index","clickHandler","props","Item","_props","Summary","ordinal","value","data","useStaticQuery","Section","heading","title","subtitle","Content","href","target","Card","allFile","nodes","childMdx","id","body","frontmatter","MDXRenderer","icon","Icon","result","console","log","StaticImage","src","alt","_result$allFile$nodes","List","AboutMeSection","AgileSection","Head"],"sourceRoot":""}