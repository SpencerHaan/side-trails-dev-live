{"version":3,"file":"component---src-pages-index-tsx-a956b5faf285a35a3fdc.js","mappings":"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","sources":["webpack://side-trail-software-development/./src/components/Testimonial.tsx","webpack://side-trail-software-development/./src/utilities/HorizontalOrientation.tsx","webpack://side-trail-software-development/./src/components/Button.tsx","webpack://side-trail-software-development/./src/components/Icon.tsx","webpack://side-trail-software-development/./src/components/ListCard.tsx","webpack://side-trail-software-development/./src/sections/ProcessSection.tsx","webpack://side-trail-software-development/./node_modules/@use-gesture/core/dist/maths-0ab39ae9.esm.js","webpack://side-trail-software-development/./node_modules/@use-gesture/core/dist/actions-fe213e88.esm.js","webpack://side-trail-software-development/./node_modules/@use-gesture/core/dist/use-gesture-core.esm.js","webpack://side-trail-software-development/./node_modules/@use-gesture/react/dist/use-gesture-react.esm.js","webpack://side-trail-software-development/./src/components/Carousel.tsx","webpack://side-trail-software-development/./src/sections/TestimonialSection.tsx","webpack://side-trail-software-development/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://side-trail-software-development/./src/components/ContactForm.tsx","webpack://side-trail-software-development/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport {\n  FaQuoteLeft as LeftQuote,\n  FaQuoteRight as RightQuote,\n} from \"react-icons/fa6\"\nimport Overlay from './Overlay'\nimport Content from './Content'\n\ninterface TestimonialProperties {\n  image?: React.ReactElement<typeof StaticImage>\n  contact: string\n  role: string\n  company: string\n  children: React.ReactElement | string\n}\n\nconst Testimonial = ({image, contact, role, company, children}: TestimonialProperties) => {\n  return (\n    <div className=\"pb-2 md:p-4 space-y-4 w-full\">\n      { image\n        ? <div className=\"m-auto rounded-2xl overflow-clip w-[128px] h-[128px] lg:w-[144px] lg:h-[144px] 2xl:w-[160px] 2xl:h-[160px]\">{image}</div>\n        : null\n      }\n      <Overlay>\n        <div className=\"flex flex-col md:flex-row h-full justify-between items-center text-zinc-200\">\n          <LeftQuote className=\"text-5xl md:text-6xl lg:text-7xl\"/>\n          <RightQuote className=\"text-5xl md:text-6xl lg:text-7xl\"/>\n        </div>\n        <Content className=\"text-center\">\n          {children}\n        </Content>\n      </Overlay>\n      <div className=\"italic text-center text-xs md:text-sm xl:text-base 3xl:text-lg text-zinc-400\">\n        <div className=\"flex flex-wrap justify-center gap-1\">\n          <div>\n            {contact},\n          </div>\n          <div>\n            {role}\n          </div>\n        </div>\n        <div>{company}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Testimonial","export enum HorizontalOrientation {\n  Left,\n  Right\n}","import * as React from \"react\"\n\ninterface ButtonProperties {\n  form?: string\n  disabled?: boolean\n  label: string\n  onClick?: React.MouseEventHandler\n}\n\nconst Button = ({ form, disabled, label, onClick }: ButtonProperties) => {\n  return (\n    <button\n      form={form}\n      disabled={disabled}\n      onClick={onClick}\n      className=\"w-28 lg:w-32 xl:w-36 p-2 lg:p-3 rounded-full text-sm lg:text-base xl:text-lg bg-zinc-300\n        disabled:text-zinc-400 disabled:bg-zinc-200\n        enabled:hover:font-extrabold enabled:hover:bg-lion\n        transition ease-in-out duration-75\"\n    >\n      {label}\n    </button>\n  )\n}\n\nexport default Button","import * as React from \"react\"\nimport { IconBaseProps } from \"react-icons\"\n\ninterface IconProperties {\n  type: React.ElementType<IconBaseProps>\n}\n\nconst Icon = ({type: Icon}: IconProperties) => {\n  return (\n    <div className=\"w-fit h-fit p-3 lg:p-6 flex items-center justify-center rounded-full drop-shadow bg-zinc-300 border border-zinc-400\">\n      <div className=\"hidden xl:block\">\n        <Icon size={32} className=\"text-zinc-500\"/>\n      </div>\n      <div className=\"xl:hidden\">\n        <Icon size={24} className=\"text-zinc-500\"/>\n      </div>\n    </div>\n  )\n}\n\nexport default Icon","import { StaticImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport Card from \"./Card\"\nimport { HorizontalOrientation } from \"../utilities/HorizontalOrientation\"\n\nexport interface ListCardProperties {\n  title: string\n  children: React.ReactElement<typeof Item>[]\n}\n\nconst ListCard = ({title, children}: ListCardProperties) => {\n  return (\n    <Card heading={title}>\n      <div className=\"flex flex-col gap-12 lg:gap-6\">\n        {children}\n      </div>\n    </Card>\n  )\n}\n\ninterface ItemProperties {\n  image: React.ReactElement\n  imageOrientation: HorizontalOrientation\n  children: React.ReactElement[] | string[]\n}\n\nconst Item = ({image, imageOrientation, children}: ItemProperties) => {\n  const ItemImage = () => (\n    <div className=\"flex justify-center max-w-[192px] md:max-w-[224px] rounded-xl overflow-clip bg-white\">\n      {image}\n    </div>\n  )\n  return (\n    <div className={`flex ${imageOrientation === HorizontalOrientation.Left ? \"flex-wrap\" : \"flex-wrap-reverse\"} justify-center gap-4`}>\n      { imageOrientation === HorizontalOrientation.Left\n          ? <ItemImage/>\n          : null\n      }\n      <div className=\"flex flex-col flex-1 justify-center gap-4 min-w-[320px]\">\n        {children}\n      </div>\n      { imageOrientation === HorizontalOrientation.Right\n          ? <ItemImage/>\n          : null\n      }\n    </div>\n  )\n}\n\nListCard.Item = Item\n\nexport default ListCard\n","import * as React from \"react\"\nimport Section from \"../components/Section\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport ListCard from \"../components/ListCard\"\nimport { HorizontalOrientation } from \"../utilities/HorizontalOrientation\"\nimport Content from \"../components/Content\"\n\ninterface ProcessTileProperties {\n  image: React.ReactElement\n  imageOrientation: HorizontalOrientation\n  title: string\n  text: string\n  subtext: string\n}\n\nconst ProcessTile = ({image, imageOrientation, title, text, subtext}: ProcessTileProperties) => {\n  return (\n    <ListCard.Item\n      image={image}\n      imageOrientation={imageOrientation}\n    >\n      <div className=\"text-base md:text-lg xl:text-xl 3xl:text-2xl text-center md:text-left text-zinc-500\">\n        {title}\n      </div>\n      <div className=\"text-sm md:text-base xl:text-lg 3xl:text-xl text-center md:text-left\">\n        {text}\n      </div>\n      <div className=\"text-xs md:text-sm xl:text-base 3xl:text-lg text-zinc-400\">\n        {subtext}\n      </div>\n    </ListCard.Item>\n  )\n}\n\nconst ProcessSection = () => {\n  return (\n    <Section.Item heading={{ title: \"Side Trailing\", subtitle: \"The Side Trails Software Development process.\" }}>\n      <Content>\n        <p>\n          A process of discovery and exploration aimed at developing a deep understanding of your systems, technical challenges, and business problems.\n          In order to establish this understanding, close collaboration with you is integral to the process. It is not to embarked upon alone.\n        </p>\n        <p>\n          Any development project I undertake can be loosely broken down into the following parts: Discover, Explore, and Build.\n        </p>\n      </Content>\n      <ListCard title=\"Process\">\n        <ProcessTile\n          image={<StaticImage src=\"../images/discover.png\" alt=\"\" objectFit=\"fill\"/>}\n          imageOrientation={HorizontalOrientation.Right}\n          title=\"Discover\"\n          text=\"First, let's discover what your business needs/technical challenges are all about.\"\n          subtext=\"What are you trying to achieve? What existing software solutions do you have? What are the non-negotiable vs. the nice-to-haves requirements?\"\n        />\n        <ProcessTile\n          image={<StaticImage src=\"../images/explore.png\" alt=\"\" objectFit=\"fill\"/>}\n          imageOrientation={HorizontalOrientation.Left}\n          title=\"Explore\"\n          text=\"Second, let's explore these business needs/technical challenges to establish a shared and deep understanding.\"\n          subtext=\"What are the various systems and processes? How do they interact? What are the first principles? Close collaboration is key.\"\n        />\n        <ProcessTile\n          image={<StaticImage src=\"../images/build.png\" alt=\"\" objectFit=\"fill\"/>}\n          imageOrientation={HorizontalOrientation.Right}\n          title=\"Build\"\n          text=\"Third, let's build the solution.\"\n          subtext=\"Discovery and exploration remain ongoing. There will always be more questions to ask and answer throughout the process, always more side trails to explore.\"\n        />\n      </ListCard>\n    </Section.Item>\n  )\n}\n\nexport default ProcessSection","function clamp(v, min, max) {\n  return Math.max(min, Math.min(v, max));\n}\nconst V = {\n  toVector(v, fallback) {\n    if (v === undefined) v = fallback;\n    return Array.isArray(v) ? v : [v, v];\n  },\n  add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n  sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n  addTo(v1, v2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n  subTo(v1, v2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  }\n};\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\n  const [[X0, X1], [Y0, Y1]] = bounds;\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n\nexport { V, computeRubberband as c, rubberbandIfOutOfBounds as r };\n","import { V, c as computeRubberband } from './maths-0ab39ae9.esm.js';\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nconst EVENT_TYPE_MAP = {\n  pointer: {\n    start: 'down',\n    change: 'move',\n    end: 'up'\n  },\n  mouse: {\n    start: 'down',\n    change: 'move',\n    end: 'up'\n  },\n  touch: {\n    start: 'start',\n    change: 'move',\n    end: 'end'\n  },\n  gesture: {\n    start: 'start',\n    change: 'change',\n    end: 'end'\n  }\n};\nfunction capitalize(string) {\n  if (!string) return '';\n  return string[0].toUpperCase() + string.slice(1);\n}\nconst actionsWithoutCaptureSupported = ['enter', 'leave'];\nfunction hasCapture(capture = false, actionKey) {\n  return capture && !actionsWithoutCaptureSupported.includes(actionKey);\n}\nfunction toHandlerProp(device, action = '', capture = false) {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return 'on' + capitalize(device) + capitalize(actionKey) + (hasCapture(capture, actionKey) ? 'Capture' : '');\n}\nconst pointerCaptureEvents = ['gotpointercapture', 'lostpointercapture'];\nfunction parseProp(prop) {\n  let eventKey = prop.substring(2).toLowerCase();\n  const passive = !!~eventKey.indexOf('passive');\n  if (passive) eventKey = eventKey.replace('passive', '');\n  const captureKey = pointerCaptureEvents.includes(eventKey) ? 'capturecapture' : 'capture';\n  const capture = !!~eventKey.indexOf(captureKey);\n  if (capture) eventKey = eventKey.replace('capture', '');\n  return {\n    device: eventKey,\n    capture,\n    passive\n  };\n}\nfunction toDomEventType(device, action = '') {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return device + actionKey;\n}\nfunction isTouch(event) {\n  return 'touches' in event;\n}\nfunction getPointerType(event) {\n  if (isTouch(event)) return 'touch';\n  if ('pointerType' in event) return event.pointerType;\n  return 'mouse';\n}\nfunction getCurrentTargetTouchList(event) {\n  return Array.from(event.touches).filter(e => {\n    var _event$currentTarget, _event$currentTarget$;\n    return e.target === event.currentTarget || ((_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || (_event$currentTarget$ = _event$currentTarget.contains) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.call(_event$currentTarget, e.target));\n  });\n}\nfunction getTouchList(event) {\n  return event.type === 'touchend' || event.type === 'touchcancel' ? event.changedTouches : event.targetTouches;\n}\nfunction getValueEvent(event) {\n  return isTouch(event) ? getTouchList(event)[0] : event;\n}\nfunction distanceAngle(P1, P2) {\n  try {\n    const dx = P2.clientX - P1.clientX;\n    const dy = P2.clientY - P1.clientY;\n    const cx = (P2.clientX + P1.clientX) / 2;\n    const cy = (P2.clientY + P1.clientY) / 2;\n    const distance = Math.hypot(dx, dy);\n    const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\n    const origin = [cx, cy];\n    return {\n      angle,\n      distance,\n      origin\n    };\n  } catch (_unused) {}\n  return null;\n}\nfunction touchIds(event) {\n  return getCurrentTargetTouchList(event).map(touch => touch.identifier);\n}\nfunction touchDistanceAngle(event, ids) {\n  const [P1, P2] = Array.from(event.touches).filter(touch => ids.includes(touch.identifier));\n  return distanceAngle(P1, P2);\n}\nfunction pointerId(event) {\n  const valueEvent = getValueEvent(event);\n  return isTouch(event) ? valueEvent.identifier : valueEvent.pointerId;\n}\nfunction pointerValues(event) {\n  const valueEvent = getValueEvent(event);\n  return [valueEvent.clientX, valueEvent.clientY];\n}\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction wheelValues(event) {\n  let {\n    deltaX,\n    deltaY,\n    deltaMode\n  } = event;\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT;\n    deltaY *= LINE_HEIGHT;\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT;\n    deltaY *= PAGE_HEIGHT;\n  }\n  return [deltaX, deltaY];\n}\nfunction scrollValues(event) {\n  var _ref, _ref2;\n  const {\n    scrollX,\n    scrollY,\n    scrollLeft,\n    scrollTop\n  } = event.currentTarget;\n  return [(_ref = scrollX !== null && scrollX !== void 0 ? scrollX : scrollLeft) !== null && _ref !== void 0 ? _ref : 0, (_ref2 = scrollY !== null && scrollY !== void 0 ? scrollY : scrollTop) !== null && _ref2 !== void 0 ? _ref2 : 0];\n}\nfunction getEventDetails(event) {\n  const payload = {};\n  if ('buttons' in event) payload.buttons = event.buttons;\n  if ('shiftKey' in event) {\n    const {\n      shiftKey,\n      altKey,\n      metaKey,\n      ctrlKey\n    } = event;\n    Object.assign(payload, {\n      shiftKey,\n      altKey,\n      metaKey,\n      ctrlKey\n    });\n  }\n  return payload;\n}\n\nfunction call(v, ...args) {\n  if (typeof v === 'function') {\n    return v(...args);\n  } else {\n    return v;\n  }\n}\nfunction noop() {}\nfunction chain(...fns) {\n  if (fns.length === 0) return noop;\n  if (fns.length === 1) return fns[0];\n  return function () {\n    let result;\n    for (const fn of fns) {\n      result = fn.apply(this, arguments) || result;\n    }\n    return result;\n  };\n}\nfunction assignDefault(value, fallback) {\n  return Object.assign({}, fallback, value || {});\n}\n\nconst BEFORE_LAST_KINEMATICS_DELAY = 32;\nclass Engine {\n  constructor(ctrl, args, key) {\n    this.ctrl = ctrl;\n    this.args = args;\n    this.key = key;\n    if (!this.state) {\n      this.state = {};\n      this.computeValues([0, 0]);\n      this.computeInitial();\n      if (this.init) this.init();\n      this.reset();\n    }\n  }\n  get state() {\n    return this.ctrl.state[this.key];\n  }\n  set state(state) {\n    this.ctrl.state[this.key] = state;\n  }\n  get shared() {\n    return this.ctrl.state.shared;\n  }\n  get eventStore() {\n    return this.ctrl.gestureEventStores[this.key];\n  }\n  get timeoutStore() {\n    return this.ctrl.gestureTimeoutStores[this.key];\n  }\n  get config() {\n    return this.ctrl.config[this.key];\n  }\n  get sharedConfig() {\n    return this.ctrl.config.shared;\n  }\n  get handler() {\n    return this.ctrl.handlers[this.key];\n  }\n  reset() {\n    const {\n      state,\n      shared,\n      ingKey,\n      args\n    } = this;\n    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;\n    state._step = [false, false];\n    state.intentional = false;\n    state._movement = [0, 0];\n    state._distance = [0, 0];\n    state._direction = [0, 0];\n    state._delta = [0, 0];\n    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]];\n    state.args = args;\n    state.axis = undefined;\n    state.memo = undefined;\n    state.elapsedTime = state.timeDelta = 0;\n    state.direction = [0, 0];\n    state.distance = [0, 0];\n    state.overflow = [0, 0];\n    state._movementBound = [false, false];\n    state.velocity = [0, 0];\n    state.movement = [0, 0];\n    state.delta = [0, 0];\n    state.timeStamp = 0;\n  }\n  start(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state._active) {\n      this.reset();\n      this.computeInitial();\n      state._active = true;\n      state.target = event.target;\n      state.currentTarget = event.currentTarget;\n      state.lastOffset = config.from ? call(config.from, state) : state.offset;\n      state.offset = state.lastOffset;\n      state.startTime = state.timeStamp = event.timeStamp;\n    }\n  }\n  computeValues(values) {\n    const state = this.state;\n    state._values = values;\n    state.values = this.config.transform(values);\n  }\n  computeInitial() {\n    const state = this.state;\n    state._initial = state._values;\n    state.initial = state.values;\n  }\n  compute(event) {\n    const {\n      state,\n      config,\n      shared\n    } = this;\n    state.args = this.args;\n    let dt = 0;\n    if (event) {\n      state.event = event;\n      if (config.preventDefault && event.cancelable) state.event.preventDefault();\n      state.type = event.type;\n      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;\n      shared.locked = !!document.pointerLockElement;\n      Object.assign(shared, getEventDetails(event));\n      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;\n      dt = event.timeStamp - state.timeStamp;\n      state.timeStamp = event.timeStamp;\n      state.elapsedTime = state.timeStamp - state.startTime;\n    }\n    if (state._active) {\n      const _absoluteDelta = state._delta.map(Math.abs);\n      V.addTo(state._distance, _absoluteDelta);\n    }\n    if (this.axisIntent) this.axisIntent(event);\n    const [_m0, _m1] = state._movement;\n    const [t0, t1] = config.threshold;\n    const {\n      _step,\n      values\n    } = state;\n    if (config.hasCustomTransform) {\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && values[0];\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && values[1];\n    } else {\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && Math.sign(_m0) * t0;\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && Math.sign(_m1) * t1;\n    }\n    state.intentional = _step[0] !== false || _step[1] !== false;\n    if (!state.intentional) return;\n    const movement = [0, 0];\n    if (config.hasCustomTransform) {\n      const [v0, v1] = values;\n      movement[0] = _step[0] !== false ? v0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? v1 - _step[1] : 0;\n    } else {\n      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;\n    }\n    if (this.restrictToAxis && !state._blocked) this.restrictToAxis(movement);\n    const previousOffset = state.offset;\n    const gestureIsActive = state._active && !state._blocked || state.active;\n    if (gestureIsActive) {\n      state.first = state._active && !state.active;\n      state.last = !state._active && state.active;\n      state.active = shared[this.ingKey] = state._active;\n      if (event) {\n        if (state.first) {\n          if ('bounds' in config) state._bounds = call(config.bounds, state);\n          if (this.setup) this.setup();\n        }\n        state.movement = movement;\n        this.computeOffset();\n      }\n    }\n    const [ox, oy] = state.offset;\n    const [[x0, x1], [y0, y1]] = state._bounds;\n    state.overflow = [ox < x0 ? -1 : ox > x1 ? 1 : 0, oy < y0 ? -1 : oy > y1 ? 1 : 0];\n    state._movementBound[0] = state.overflow[0] ? state._movementBound[0] === false ? state._movement[0] : state._movementBound[0] : false;\n    state._movementBound[1] = state.overflow[1] ? state._movementBound[1] === false ? state._movement[1] : state._movementBound[1] : false;\n    const rubberband = state._active ? config.rubberband || [0, 0] : [0, 0];\n    state.offset = computeRubberband(state._bounds, state.offset, rubberband);\n    state.delta = V.sub(state.offset, previousOffset);\n    this.computeMovement();\n    if (gestureIsActive && (!state.last || dt > BEFORE_LAST_KINEMATICS_DELAY)) {\n      state.delta = V.sub(state.offset, previousOffset);\n      const absoluteDelta = state.delta.map(Math.abs);\n      V.addTo(state.distance, absoluteDelta);\n      state.direction = state.delta.map(Math.sign);\n      state._direction = state._delta.map(Math.sign);\n      if (!state.first && dt > 0) {\n        state.velocity = [absoluteDelta[0] / dt, absoluteDelta[1] / dt];\n        state.timeDelta = dt;\n      }\n    }\n  }\n  emit() {\n    const state = this.state;\n    const shared = this.shared;\n    const config = this.config;\n    if (!state._active) this.clean();\n    if ((state._blocked || !state.intentional) && !state._force && !config.triggerAllEvents) return;\n    const memo = this.handler(_objectSpread2(_objectSpread2(_objectSpread2({}, shared), state), {}, {\n      [this.aliasKey]: state.values\n    }));\n    if (memo !== undefined) state.memo = memo;\n  }\n  clean() {\n    this.eventStore.clean();\n    this.timeoutStore.clean();\n  }\n}\n\nfunction selectAxis([dx, dy], threshold) {\n  const absDx = Math.abs(dx);\n  const absDy = Math.abs(dy);\n  if (absDx > absDy && absDx > threshold) {\n    return 'x';\n  }\n  if (absDy > absDx && absDy > threshold) {\n    return 'y';\n  }\n  return undefined;\n}\nclass CoordinatesEngine extends Engine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"aliasKey\", 'xy');\n  }\n  reset() {\n    super.reset();\n    this.state.axis = undefined;\n  }\n  init() {\n    this.state.offset = [0, 0];\n    this.state.lastOffset = [0, 0];\n  }\n  computeOffset() {\n    this.state.offset = V.add(this.state.lastOffset, this.state.movement);\n  }\n  computeMovement() {\n    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);\n  }\n  axisIntent(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state.axis && event) {\n      const threshold = typeof config.axisThreshold === 'object' ? config.axisThreshold[getPointerType(event)] : config.axisThreshold;\n      state.axis = selectAxis(state._movement, threshold);\n    }\n    state._blocked = (config.lockDirection || !!config.axis) && !state.axis || !!config.axis && config.axis !== state.axis;\n  }\n  restrictToAxis(v) {\n    if (this.config.axis || this.config.lockDirection) {\n      switch (this.state.axis) {\n        case 'x':\n          v[1] = 0;\n          break;\n        case 'y':\n          v[0] = 0;\n          break;\n      }\n    }\n  }\n}\n\nconst identity = v => v;\nconst DEFAULT_RUBBERBAND = 0.15;\nconst commonConfigResolver = {\n  enabled(value = true) {\n    return value;\n  },\n  eventOptions(value, _k, config) {\n    return _objectSpread2(_objectSpread2({}, config.shared.eventOptions), value);\n  },\n  preventDefault(value = false) {\n    return value;\n  },\n  triggerAllEvents(value = false) {\n    return value;\n  },\n  rubberband(value = 0) {\n    switch (value) {\n      case true:\n        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND];\n      case false:\n        return [0, 0];\n      default:\n        return V.toVector(value);\n    }\n  },\n  from(value) {\n    if (typeof value === 'function') return value;\n    if (value != null) return V.toVector(value);\n  },\n  transform(value, _k, config) {\n    const transform = value || config.shared.transform;\n    this.hasCustomTransform = !!transform;\n    if (process.env.NODE_ENV === 'development') {\n      const originalTransform = transform || identity;\n      return v => {\n        const r = originalTransform(v);\n        if (!isFinite(r[0]) || !isFinite(r[1])) {\n          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r[0]},${[1]}]`);\n        }\n        return r;\n      };\n    }\n    return transform || identity;\n  },\n  threshold(value) {\n    return V.toVector(value, 0);\n  }\n};\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(commonConfigResolver, {\n    domTarget(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n      }\n      return NaN;\n    },\n    lockDirection(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`lockDirection\\` option has been merged with \\`axis\\`. Use it as in \\`{ axis: 'lock' }\\``);\n      }\n      return NaN;\n    },\n    initial(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`initial\\` option has been renamed to \\`from\\`.`);\n      }\n      return NaN;\n    }\n  });\n}\n\nconst DEFAULT_AXIS_THRESHOLD = 0;\nconst coordinatesConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\n  axis(_v, _k, {\n    axis\n  }) {\n    this.lockDirection = axis === 'lock';\n    if (!this.lockDirection) return axis;\n  },\n  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {\n    return value;\n  },\n  bounds(value = {}) {\n    if (typeof value === 'function') {\n      return state => coordinatesConfigResolver.bounds(value(state));\n    }\n    if ('current' in value) {\n      return () => value.current;\n    }\n    if (typeof HTMLElement === 'function' && value instanceof HTMLElement) {\n      return value;\n    }\n    const {\n      left = -Infinity,\n      right = Infinity,\n      top = -Infinity,\n      bottom = Infinity\n    } = value;\n    return [[left, right], [top, bottom]];\n  }\n});\n\nconst KEYS_DELTA_MAP = {\n  ArrowRight: (displacement, factor = 1) => [displacement * factor, 0],\n  ArrowLeft: (displacement, factor = 1) => [-1 * displacement * factor, 0],\n  ArrowUp: (displacement, factor = 1) => [0, -1 * displacement * factor],\n  ArrowDown: (displacement, factor = 1) => [0, displacement * factor]\n};\nclass DragEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'dragging');\n  }\n  reset() {\n    super.reset();\n    const state = this.state;\n    state._pointerId = undefined;\n    state._pointerActive = false;\n    state._keyboardActive = false;\n    state._preventScroll = false;\n    state._delayed = false;\n    state.swipe = [0, 0];\n    state.tap = false;\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n  }\n  setup() {\n    const state = this.state;\n    if (state._bounds instanceof HTMLElement) {\n      const boundRect = state._bounds.getBoundingClientRect();\n      const targetRect = state.currentTarget.getBoundingClientRect();\n      const _bounds = {\n        left: boundRect.left - targetRect.left + state.offset[0],\n        right: boundRect.right - targetRect.right + state.offset[0],\n        top: boundRect.top - targetRect.top + state.offset[1],\n        bottom: boundRect.bottom - targetRect.bottom + state.offset[1]\n      };\n      state._bounds = coordinatesConfigResolver.bounds(_bounds);\n    }\n  }\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    state.canceled = true;\n    state._active = false;\n    setTimeout(() => {\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n  setActive() {\n    this.state._active = this.state._pointerActive || this.state._keyboardActive;\n  }\n  clean() {\n    this.pointerClean();\n    this.state._pointerActive = false;\n    this.state._keyboardActive = false;\n    super.clean();\n  }\n  pointerDown(event) {\n    const config = this.config;\n    const state = this.state;\n    if (event.buttons != null && (Array.isArray(config.pointerButtons) ? !config.pointerButtons.includes(event.buttons) : config.pointerButtons !== -1 && config.pointerButtons !== event.buttons)) return;\n    const ctrlIds = this.ctrl.setEventIds(event);\n    if (config.pointerCapture) {\n      event.target.setPointerCapture(event.pointerId);\n    }\n    if (ctrlIds && ctrlIds.size > 1 && state._pointerActive) return;\n    this.start(event);\n    this.setupPointer(event);\n    state._pointerId = pointerId(event);\n    state._pointerActive = true;\n    this.computeValues(pointerValues(event));\n    this.computeInitial();\n    if (config.preventScrollAxis && getPointerType(event) !== 'mouse') {\n      state._active = false;\n      this.setupScrollPrevention(event);\n    } else if (config.delay > 0) {\n      this.setupDelayTrigger(event);\n      if (config.triggerAllEvents) {\n        this.compute(event);\n        this.emit();\n      }\n    } else {\n      this.startPointerDrag(event);\n    }\n  }\n  startPointerDrag(event) {\n    const state = this.state;\n    state._active = true;\n    state._preventScroll = true;\n    state._delayed = false;\n    this.compute(event);\n    this.emit();\n  }\n  pointerMove(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state._pointerActive) return;\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n    const _values = pointerValues(event);\n    if (document.pointerLockElement === event.target) {\n      state._delta = [event.movementX, event.movementY];\n    } else {\n      state._delta = V.sub(_values, state._values);\n      this.computeValues(_values);\n    }\n    V.addTo(state._movement, state._delta);\n    this.compute(event);\n    if (state._delayed && state.intentional) {\n      this.timeoutStore.remove('dragDelay');\n      state.active = false;\n      this.startPointerDrag(event);\n      return;\n    }\n    if (config.preventScrollAxis && !state._preventScroll) {\n      if (state.axis) {\n        if (state.axis === config.preventScrollAxis || config.preventScrollAxis === 'xy') {\n          state._active = false;\n          this.clean();\n          return;\n        } else {\n          this.timeoutStore.remove('startPointerDrag');\n          this.startPointerDrag(event);\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n    this.emit();\n  }\n  pointerUp(event) {\n    this.ctrl.setEventIds(event);\n    try {\n      if (this.config.pointerCapture && event.target.hasPointerCapture(event.pointerId)) {\n        ;\n        event.target.releasePointerCapture(event.pointerId);\n      }\n    } catch (_unused) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(`[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \\`@react-three/fiber\\`. \\n\\nPlease upgrade to the latest version.`);\n      }\n    }\n    const state = this.state;\n    const config = this.config;\n    if (!state._active || !state._pointerActive) return;\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n    this.state._pointerActive = false;\n    this.setActive();\n    this.compute(event);\n    const [dx, dy] = state._distance;\n    state.tap = dx <= config.tapsThreshold && dy <= config.tapsThreshold;\n    if (state.tap && config.filterTaps) {\n      state._force = true;\n    } else {\n      const [_dx, _dy] = state._delta;\n      const [_mx, _my] = state._movement;\n      const [svx, svy] = config.swipe.velocity;\n      const [sx, sy] = config.swipe.distance;\n      const sdt = config.swipe.duration;\n      if (state.elapsedTime < sdt) {\n        const _vx = Math.abs(_dx / state.timeDelta);\n        const _vy = Math.abs(_dy / state.timeDelta);\n        if (_vx > svx && Math.abs(_mx) > sx) state.swipe[0] = Math.sign(_dx);\n        if (_vy > svy && Math.abs(_my) > sy) state.swipe[1] = Math.sign(_dy);\n      }\n    }\n    this.emit();\n  }\n  pointerClick(event) {\n    if (!this.state.tap && event.detail > 0) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  setupPointer(event) {\n    const config = this.config;\n    const device = config.device;\n    if (process.env.NODE_ENV === 'development') {\n      try {\n        if (device === 'pointer' && config.preventScrollDelay === undefined) {\n          const currentTarget = 'uv' in event ? event.sourceEvent.currentTarget : event.currentTarget;\n          const style = window.getComputedStyle(currentTarget);\n          if (style.touchAction === 'auto') {\n            console.warn(`[@use-gesture]: The drag target has its \\`touch-action\\` style property set to \\`auto\\`. It is recommended to add \\`touch-action: 'none'\\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.\\n\\nThis message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`, currentTarget);\n          }\n        }\n      } catch (_unused2) {}\n    }\n    if (config.pointerLock) {\n      event.currentTarget.requestPointerLock();\n    }\n    if (!config.pointerCapture) {\n      this.eventStore.add(this.sharedConfig.window, device, 'change', this.pointerMove.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'end', this.pointerUp.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'cancel', this.pointerUp.bind(this));\n    }\n  }\n  pointerClean() {\n    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {\n      document.exitPointerLock();\n    }\n  }\n  preventScroll(event) {\n    if (this.state._preventScroll && event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  setupScrollPrevention(event) {\n    this.state._preventScroll = false;\n    persistEvent(event);\n    const remove = this.eventStore.add(this.sharedConfig.window, 'touch', 'change', this.preventScroll.bind(this), {\n      passive: false\n    });\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'end', remove);\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'cancel', remove);\n    this.timeoutStore.add('startPointerDrag', this.startPointerDrag.bind(this), this.config.preventScrollDelay, event);\n  }\n  setupDelayTrigger(event) {\n    this.state._delayed = true;\n    this.timeoutStore.add('dragDelay', () => {\n      this.state._step = [0, 0];\n      this.startPointerDrag(event);\n    }, this.config.delay);\n  }\n  keyDown(event) {\n    const deltaFn = KEYS_DELTA_MAP[event.key];\n    if (deltaFn) {\n      const state = this.state;\n      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;\n      this.start(event);\n      state._delta = deltaFn(this.config.keyboardDisplacement, factor);\n      state._keyboardActive = true;\n      V.addTo(state._movement, state._delta);\n      this.compute(event);\n      this.emit();\n    }\n  }\n  keyUp(event) {\n    if (!(event.key in KEYS_DELTA_MAP)) return;\n    this.state._keyboardActive = false;\n    this.setActive();\n    this.compute(event);\n    this.emit();\n  }\n  bind(bindFunction) {\n    const device = this.config.device;\n    bindFunction(device, 'start', this.pointerDown.bind(this));\n    if (this.config.pointerCapture) {\n      bindFunction(device, 'change', this.pointerMove.bind(this));\n      bindFunction(device, 'end', this.pointerUp.bind(this));\n      bindFunction(device, 'cancel', this.pointerUp.bind(this));\n      bindFunction('lostPointerCapture', '', this.pointerUp.bind(this));\n    }\n    if (this.config.keys) {\n      bindFunction('key', 'down', this.keyDown.bind(this));\n      bindFunction('key', 'up', this.keyUp.bind(this));\n    }\n    if (this.config.filterTaps) {\n      bindFunction('click', '', this.pointerClick.bind(this), {\n        capture: true,\n        passive: false\n      });\n    }\n  }\n}\nfunction persistEvent(event) {\n  'persist' in event && typeof event.persist === 'function' && event.persist();\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement;\nfunction supportsTouchEvents() {\n  return isBrowser && 'ontouchstart' in window;\n}\nfunction isTouchScreen() {\n  return supportsTouchEvents() || isBrowser && window.navigator.maxTouchPoints > 1;\n}\nfunction supportsPointerEvents() {\n  return isBrowser && 'onpointerdown' in window;\n}\nfunction supportsPointerLock() {\n  return isBrowser && 'exitPointerLock' in window.document;\n}\nfunction supportsGestureEvents() {\n  try {\n    return 'constructor' in GestureEvent;\n  } catch (e) {\n    return false;\n  }\n}\nconst SUPPORT = {\n  isBrowser,\n  gesture: supportsGestureEvents(),\n  touch: supportsTouchEvents(),\n  touchscreen: isTouchScreen(),\n  pointer: supportsPointerEvents(),\n  pointerLock: supportsPointerLock()\n};\n\nconst DEFAULT_PREVENT_SCROLL_DELAY = 250;\nconst DEFAULT_DRAG_DELAY = 180;\nconst DEFAULT_SWIPE_VELOCITY = 0.5;\nconst DEFAULT_SWIPE_DISTANCE = 50;\nconst DEFAULT_SWIPE_DURATION = 250;\nconst DEFAULT_KEYBOARD_DISPLACEMENT = 10;\nconst DEFAULT_DRAG_AXIS_THRESHOLD = {\n  mouse: 0,\n  touch: 0,\n  pen: 8\n};\nconst dragConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  device(_v, _k, {\n    pointer: {\n      touch = false,\n      lock = false,\n      mouse = false\n    } = {}\n  }) {\n    this.pointerLock = lock && SUPPORT.pointerLock;\n    if (SUPPORT.touch && touch) return 'touch';\n    if (this.pointerLock) return 'mouse';\n    if (SUPPORT.pointer && !mouse) return 'pointer';\n    if (SUPPORT.touch) return 'touch';\n    return 'mouse';\n  },\n  preventScrollAxis(value, _k, {\n    preventScroll\n  }) {\n    this.preventScrollDelay = typeof preventScroll === 'number' ? preventScroll : preventScroll || preventScroll === undefined && value ? DEFAULT_PREVENT_SCROLL_DELAY : undefined;\n    if (!SUPPORT.touchscreen || preventScroll === false) return undefined;\n    return value ? value : preventScroll !== undefined ? 'y' : undefined;\n  },\n  pointerCapture(_v, _k, {\n    pointer: {\n      capture = true,\n      buttons = 1,\n      keys = true\n    } = {}\n  }) {\n    this.pointerButtons = buttons;\n    this.keys = keys;\n    return !this.pointerLock && this.device === 'pointer' && capture;\n  },\n  threshold(value, _k, {\n    filterTaps = false,\n    tapsThreshold = 3,\n    axis = undefined\n  }) {\n    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0);\n    this.filterTaps = filterTaps;\n    this.tapsThreshold = tapsThreshold;\n    return threshold;\n  },\n  swipe({\n    velocity = DEFAULT_SWIPE_VELOCITY,\n    distance = DEFAULT_SWIPE_DISTANCE,\n    duration = DEFAULT_SWIPE_DURATION\n  } = {}) {\n    return {\n      velocity: this.transform(V.toVector(velocity)),\n      distance: this.transform(V.toVector(distance)),\n      duration\n    };\n  },\n  delay(value = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY;\n      case false:\n        return 0;\n      default:\n        return value;\n    }\n  },\n  axisThreshold(value) {\n    if (!value) return DEFAULT_DRAG_AXIS_THRESHOLD;\n    return _objectSpread2(_objectSpread2({}, DEFAULT_DRAG_AXIS_THRESHOLD), value);\n  },\n  keyboardDisplacement(value = DEFAULT_KEYBOARD_DISPLACEMENT) {\n    return value;\n  }\n});\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(dragConfigResolver, {\n    useTouch(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`useTouch\\` option has been renamed to \\`pointer.touch\\`. Use it as in \\`{ pointer: { touch: true } }\\`.`);\n      }\n      return NaN;\n    },\n    experimental_preventWindowScrollY(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`experimental_preventWindowScrollY\\` option has been renamed to \\`preventScroll\\`.`);\n      }\n      return NaN;\n    },\n    swipeVelocity(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeVelocity\\` option has been renamed to \\`swipe.velocity\\`. Use it as in \\`{ swipe: { velocity: 0.5 } }\\`.`);\n      }\n      return NaN;\n    },\n    swipeDistance(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeDistance\\` option has been renamed to \\`swipe.distance\\`. Use it as in \\`{ swipe: { distance: 50 } }\\`.`);\n      }\n      return NaN;\n    },\n    swipeDuration(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeDuration\\` option has been renamed to \\`swipe.duration\\`. Use it as in \\`{ swipe: { duration: 250 } }\\`.`);\n      }\n      return NaN;\n    }\n  });\n}\n\nfunction clampStateInternalMovementToBounds(state) {\n  const [ox, oy] = state.overflow;\n  const [dx, dy] = state._delta;\n  const [dirx, diry] = state._direction;\n  if (ox < 0 && dx > 0 && dirx < 0 || ox > 0 && dx < 0 && dirx > 0) {\n    state._movement[0] = state._movementBound[0];\n  }\n  if (oy < 0 && dy > 0 && diry < 0 || oy > 0 && dy < 0 && diry > 0) {\n    state._movement[1] = state._movementBound[1];\n  }\n}\n\nconst SCALE_ANGLE_RATIO_INTENT_DEG = 30;\nconst PINCH_WHEEL_RATIO = 100;\nclass PinchEngine extends Engine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'pinching');\n    _defineProperty(this, \"aliasKey\", 'da');\n  }\n  init() {\n    this.state.offset = [1, 0];\n    this.state.lastOffset = [1, 0];\n    this.state._pointerEvents = new Map();\n  }\n  reset() {\n    super.reset();\n    const state = this.state;\n    state._touchIds = [];\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n    state.turns = 0;\n  }\n  computeOffset() {\n    const {\n      type,\n      movement,\n      lastOffset\n    } = this.state;\n    if (type === 'wheel') {\n      this.state.offset = V.add(movement, lastOffset);\n    } else {\n      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];\n    }\n  }\n  computeMovement() {\n    const {\n      offset,\n      lastOffset\n    } = this.state;\n    this.state.movement = [offset[0] / lastOffset[0], offset[1] - lastOffset[1]];\n  }\n  axisIntent() {\n    const state = this.state;\n    const [_m0, _m1] = state._movement;\n    if (!state.axis) {\n      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);\n      if (axisMovementDifference < 0) state.axis = 'angle';else if (axisMovementDifference > 0) state.axis = 'scale';\n    }\n  }\n  restrictToAxis(v) {\n    if (this.config.lockDirection) {\n      if (this.state.axis === 'scale') v[1] = 0;else if (this.state.axis === 'angle') v[0] = 0;\n    }\n  }\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    setTimeout(() => {\n      state.canceled = true;\n      state._active = false;\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n  touchStart(event) {\n    this.ctrl.setEventIds(event);\n    const state = this.state;\n    const ctrlTouchIds = this.ctrl.touchIds;\n    if (state._active) {\n      if (state._touchIds.every(id => ctrlTouchIds.has(id))) return;\n    }\n    if (ctrlTouchIds.size < 2) return;\n    this.start(event);\n    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2);\n    const payload = touchDistanceAngle(event, state._touchIds);\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n  pointerStart(event) {\n    if (event.buttons != null && event.buttons % 2 !== 1) return;\n    this.ctrl.setEventIds(event);\n    event.target.setPointerCapture(event.pointerId);\n    const state = this.state;\n    const _pointerEvents = state._pointerEvents;\n    const ctrlPointerIds = this.ctrl.pointerIds;\n    if (state._active) {\n      if (Array.from(_pointerEvents.keys()).every(id => ctrlPointerIds.has(id))) return;\n    }\n    if (_pointerEvents.size < 2) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n    if (state._pointerEvents.size < 2) return;\n    this.start(event);\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n  pinchStart(event, payload) {\n    const state = this.state;\n    state.origin = payload.origin;\n    this.computeValues([payload.distance, payload.angle]);\n    this.computeInitial();\n    this.compute(event);\n    this.emit();\n  }\n  touchMove(event) {\n    if (!this.state._active) return;\n    const payload = touchDistanceAngle(event, this.state._touchIds);\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n  pointerMove(event) {\n    const _pointerEvents = this.state._pointerEvents;\n    if (_pointerEvents.has(event.pointerId)) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n    if (!this.state._active) return;\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n  pinchMove(event, payload) {\n    const state = this.state;\n    const prev_a = state._values[1];\n    const delta_a = payload.angle - prev_a;\n    let delta_turns = 0;\n    if (Math.abs(delta_a) > 270) delta_turns += Math.sign(delta_a);\n    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);\n    state.origin = payload.origin;\n    state.turns = delta_turns;\n    state._movement = [state._values[0] / state._initial[0] - 1, state._values[1] - state._initial[1]];\n    this.compute(event);\n    this.emit();\n  }\n  touchEnd(event) {\n    this.ctrl.setEventIds(event);\n    if (!this.state._active) return;\n    if (this.state._touchIds.some(id => !this.ctrl.touchIds.has(id))) {\n      this.state._active = false;\n      this.compute(event);\n      this.emit();\n    }\n  }\n  pointerEnd(event) {\n    const state = this.state;\n    this.ctrl.setEventIds(event);\n    try {\n      event.target.releasePointerCapture(event.pointerId);\n    } catch (_unused) {}\n    if (state._pointerEvents.has(event.pointerId)) {\n      state._pointerEvents.delete(event.pointerId);\n    }\n    if (!state._active) return;\n    if (state._pointerEvents.size < 2) {\n      state._active = false;\n      this.compute(event);\n      this.emit();\n    }\n  }\n  gestureStart(event) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n    if (state._active) return;\n    this.start(event);\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    this.compute(event);\n    this.emit();\n  }\n  gestureMove(event) {\n    if (event.cancelable) event.preventDefault();\n    if (!this.state._active) return;\n    const state = this.state;\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    const _previousMovement = state._movement;\n    state._movement = [event.scale - 1, event.rotation];\n    state._delta = V.sub(state._movement, _previousMovement);\n    this.compute(event);\n    this.emit();\n  }\n  gestureEnd(event) {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute(event);\n    this.emit();\n  }\n  wheel(event) {\n    const modifierKey = this.config.modifierKey;\n    if (modifierKey && (Array.isArray(modifierKey) ? !modifierKey.find(k => event[k]) : !event[modifierKey])) return;\n    if (!this.state._active) this.wheelStart(event);else this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n  wheelStart(event) {\n    this.start(event);\n    this.wheelChange(event);\n  }\n  wheelChange(event) {\n    const isR3f = ('uv' in event);\n    if (!isR3f) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      if (process.env.NODE_ENV === 'development' && !event.defaultPrevented) {\n        console.warn(`[@use-gesture]: To properly support zoom on trackpads, try using the \\`target\\` option.\\n\\nThis message will only appear in development mode.`);\n      }\n    }\n    const state = this.state;\n    state._delta = [-wheelValues(event)[1] / PINCH_WHEEL_RATIO * state.offset[0], 0];\n    V.addTo(state._movement, state._delta);\n    clampStateInternalMovementToBounds(state);\n    this.state.origin = [event.clientX, event.clientY];\n    this.compute(event);\n    this.emit();\n  }\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    const device = this.config.device;\n    if (!!device) {\n      bindFunction(device, 'start', this[device + 'Start'].bind(this));\n      bindFunction(device, 'change', this[device + 'Move'].bind(this));\n      bindFunction(device, 'end', this[device + 'End'].bind(this));\n      bindFunction(device, 'cancel', this[device + 'End'].bind(this));\n      bindFunction('lostPointerCapture', '', this[device + 'End'].bind(this));\n    }\n    if (this.config.pinchOnWheel) {\n      bindFunction('wheel', '', this.wheel.bind(this), {\n        passive: false\n      });\n    }\n  }\n}\n\nconst pinchConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\n  device(_v, _k, {\n    shared,\n    pointer: {\n      touch = false\n    } = {}\n  }) {\n    const sharedConfig = shared;\n    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture) return 'gesture';\n    if (SUPPORT.touch && touch) return 'touch';\n    if (SUPPORT.touchscreen) {\n      if (SUPPORT.pointer) return 'pointer';\n      if (SUPPORT.touch) return 'touch';\n    }\n  },\n  bounds(_v, _k, {\n    scaleBounds = {},\n    angleBounds = {}\n  }) {\n    const _scaleBounds = state => {\n      const D = assignDefault(call(scaleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [D.min, D.max];\n    };\n    const _angleBounds = state => {\n      const A = assignDefault(call(angleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [A.min, A.max];\n    };\n    if (typeof scaleBounds !== 'function' && typeof angleBounds !== 'function') return [_scaleBounds(), _angleBounds()];\n    return state => [_scaleBounds(state), _angleBounds(state)];\n  },\n  threshold(value, _k, config) {\n    this.lockDirection = config.axis === 'lock';\n    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0);\n    return threshold;\n  },\n  modifierKey(value) {\n    if (value === undefined) return 'ctrlKey';\n    return value;\n  },\n  pinchOnWheel(value = true) {\n    return value;\n  }\n});\n\nclass MoveEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'moving');\n  }\n  move(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    if (!this.state._active) this.moveStart(event);else this.moveChange(event);\n    this.timeoutStore.add('moveEnd', this.moveEnd.bind(this));\n  }\n  moveStart(event) {\n    this.start(event);\n    this.computeValues(pointerValues(event));\n    this.compute(event);\n    this.computeInitial();\n    this.emit();\n  }\n  moveChange(event) {\n    if (!this.state._active) return;\n    const values = pointerValues(event);\n    const state = this.state;\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n    this.computeValues(values);\n    this.compute(event);\n    this.emit();\n  }\n  moveEnd(event) {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute(event);\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('pointer', 'change', this.move.bind(this));\n    bindFunction('pointer', 'leave', this.moveEnd.bind(this));\n  }\n}\n\nconst moveConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  mouseOnly: (value = true) => value\n});\n\nclass ScrollEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'scrolling');\n  }\n  scroll(event) {\n    if (!this.state._active) this.start(event);\n    this.scrollChange(event);\n    this.timeoutStore.add('scrollEnd', this.scrollEnd.bind(this));\n  }\n  scrollChange(event) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n    const values = scrollValues(event);\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n    this.computeValues(values);\n    this.compute(event);\n    this.emit();\n  }\n  scrollEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('scroll', '', this.scroll.bind(this));\n  }\n}\n\nconst scrollConfigResolver = coordinatesConfigResolver;\n\nclass WheelEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'wheeling');\n  }\n  wheel(event) {\n    if (!this.state._active) this.start(event);\n    this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n  wheelChange(event) {\n    const state = this.state;\n    state._delta = wheelValues(event);\n    V.addTo(state._movement, state._delta);\n    clampStateInternalMovementToBounds(state);\n    this.compute(event);\n    this.emit();\n  }\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('wheel', '', this.wheel.bind(this));\n  }\n}\n\nconst wheelConfigResolver = coordinatesConfigResolver;\n\nclass HoverEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'hovering');\n  }\n  enter(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    this.start(event);\n    this.computeValues(pointerValues(event));\n    this.compute(event);\n    this.emit();\n  }\n  leave(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    const state = this.state;\n    if (!state._active) return;\n    state._active = false;\n    const values = pointerValues(event);\n    state._movement = state._delta = V.sub(values, state._values);\n    this.computeValues(values);\n    this.compute(event);\n    state.delta = state.movement;\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('pointer', 'enter', this.enter.bind(this));\n    bindFunction('pointer', 'leave', this.leave.bind(this));\n  }\n}\n\nconst hoverConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  mouseOnly: (value = true) => value\n});\n\nconst EngineMap = new Map();\nconst ConfigResolverMap = new Map();\nfunction registerAction(action) {\n  EngineMap.set(action.key, action.engine);\n  ConfigResolverMap.set(action.key, action.resolver);\n}\nconst dragAction = {\n  key: 'drag',\n  engine: DragEngine,\n  resolver: dragConfigResolver\n};\nconst hoverAction = {\n  key: 'hover',\n  engine: HoverEngine,\n  resolver: hoverConfigResolver\n};\nconst moveAction = {\n  key: 'move',\n  engine: MoveEngine,\n  resolver: moveConfigResolver\n};\nconst pinchAction = {\n  key: 'pinch',\n  engine: PinchEngine,\n  resolver: pinchConfigResolver\n};\nconst scrollAction = {\n  key: 'scroll',\n  engine: ScrollEngine,\n  resolver: scrollConfigResolver\n};\nconst wheelAction = {\n  key: 'wheel',\n  engine: WheelEngine,\n  resolver: wheelConfigResolver\n};\n\nexport { ConfigResolverMap as C, EngineMap as E, SUPPORT as S, _objectSpread2 as _, _defineProperty as a, touchIds as b, chain as c, toHandlerProp as d, dragAction as e, pinchAction as f, hoverAction as h, isTouch as i, moveAction as m, parseProp as p, registerAction as r, scrollAction as s, toDomEventType as t, wheelAction as w };\n","import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-fe213e88.esm.js';\nimport './maths-0ab39ae9.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n    return undefined;\n  },\n  enabled(value = true) {\n    return value;\n  },\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n  transform(value) {\n    return value;\n  }\n};\n\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\nfunction parse(newConfig, gestureKey, _config = {}) {\n  const _ref = newConfig,\n    {\n      target,\n      eventOptions,\n      window,\n      enabled,\n      transform\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear();\n  }\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n    _defineProperty(this, \"gestureEventStores\", {});\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n    _defineProperty(this, \"handlers\", {});\n    _defineProperty(this, \"config\", {});\n    _defineProperty(this, \"pointerIds\", new Set());\n    _defineProperty(this, \"touchIds\", new Set());\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n    resolveGestures(this, handlers);\n  }\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n    if (!target) return props;\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n}\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n  return [handlers, native, actions];\n}\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n    return;\n  }\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };\n","import { registerAction, dragAction, pinchAction, wheelAction, scrollAction, moveAction, hoverAction } from '@use-gesture/core/actions';\nexport * from '@use-gesture/core/actions';\nimport React from 'react';\nimport { Controller, parseMergedHandlers } from '@use-gesture/core';\nexport * from '@use-gesture/core/utils';\nexport * from '@use-gesture/core/types';\n\nfunction useRecognizers(handlers, config = {}, gestureKey, nativeHandlers) {\n  const ctrl = React.useMemo(() => new Controller(handlers), []);\n  ctrl.applyHandlers(handlers, nativeHandlers);\n  ctrl.applyConfig(config, gestureKey);\n  React.useEffect(ctrl.effect.bind(ctrl));\n  React.useEffect(() => {\n    return ctrl.clean.bind(ctrl);\n  }, []);\n  if (config.target === undefined) {\n    return ctrl.bind.bind(ctrl);\n  }\n  return undefined;\n}\n\nfunction useDrag(handler, config) {\n  registerAction(dragAction);\n  return useRecognizers({\n    drag: handler\n  }, config || {}, 'drag');\n}\n\nfunction usePinch(handler, config) {\n  registerAction(pinchAction);\n  return useRecognizers({\n    pinch: handler\n  }, config || {}, 'pinch');\n}\n\nfunction useWheel(handler, config) {\n  registerAction(wheelAction);\n  return useRecognizers({\n    wheel: handler\n  }, config || {}, 'wheel');\n}\n\nfunction useScroll(handler, config) {\n  registerAction(scrollAction);\n  return useRecognizers({\n    scroll: handler\n  }, config || {}, 'scroll');\n}\n\nfunction useMove(handler, config) {\n  registerAction(moveAction);\n  return useRecognizers({\n    move: handler\n  }, config || {}, 'move');\n}\n\nfunction useHover(handler, config) {\n  registerAction(hoverAction);\n  return useRecognizers({\n    hover: handler\n  }, config || {}, 'hover');\n}\n\nfunction createUseGesture(actions) {\n  actions.forEach(registerAction);\n  return function useGesture(_handlers, _config) {\n    const {\n      handlers,\n      nativeHandlers,\n      config\n    } = parseMergedHandlers(_handlers, _config || {});\n    return useRecognizers(handlers, config, undefined, nativeHandlers);\n  };\n}\n\nfunction useGesture(handlers, config) {\n  const hook = createUseGesture([dragAction, pinchAction, scrollAction, wheelAction, moveAction, hoverAction]);\n  return hook(handlers, config || {});\n}\n\nexport { createUseGesture, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel };\n","import * as React from 'react'\nimport Card from './Card'\nimport { useDrag } from \"@use-gesture/react\"\nimport Icons from '../utilities/Icons'\n\ninterface ItemProperties {\n  children: React.ReactElement\n}\n\nconst Item = ({children}: ItemProperties) => {\n  return (\n    <div className=\"w-full\">\n      {children}\n    </div>\n  )\n}\n\ninterface CarouselProperties {\n  children: React.ReactElement<typeof Item>[]\n}\n\nconst Carousel = ({children}: CarouselProperties) => {\n  const [currentIndex, setCurrentIndex] = React.useState(0);\n  const carouselRef = React.useRef<HTMLDivElement>(null)\n\n  const previousSlide = () => setCurrentIndex(currentIndex === 0 ? children.length - 1 : currentIndex - 1)\n  const nextSlide = () => setCurrentIndex(currentIndex === children.length - 1 ? 0 : currentIndex + 1)\n\n  const bind = useDrag(({active, movement: [mx], direction: [xDir], cancel}) => {\n    const carousel = carouselRef.current\n    if (!carousel) {\n      return\n    }\n\n    if (active && Math.abs(mx) > carousel.offsetWidth / 3) {\n      if (xDir > 0) {\n        nextSlide()\n      } else if (xDir < 0) {\n        previousSlide()\n      }\n      cancel()\n    }\n  }, { axis: \"x\" })\n\n  return (\n    <Card>\n      <div ref={carouselRef} className=\"flex touch-pan-y lg:touch-none\" {...bind()}>\n        <button onClick={previousSlide} className=\"hidden md:block text-zinc-600\">\n          <Icons.leftArrow size={36}/>\n        </button>\n        <div className=\"overflow-hidden relative\">\n          <div\n            className=\"flex transition ease-out duration-500\"\n            style={{\n              transform: `translateX(-${currentIndex * 100}%)`\n            }}\n          >\n            {\n              children.map((child, index) => {\n                return (\n                  <div key={index} className=\"w-full flex-shrink-0\">\n                    {child}\n                  </div>\n                )\n              })\n            }\n          </div>\n        <div className=\"w-full py-2 md:py-4 flex justify-center gap-2\">\n            {\n              children.map((_, index) => {\n                const style = index === currentIndex\n                  ? \"w-8 bg-zinc-600\"\n                  : \"w-4 bg-zinc-300\"\n                return <button\n                  key={index}\n                  onClick={() => setCurrentIndex(index)}\n                  disabled={index === currentIndex}\n                  className={`h-4 rounded-full ${style}`}\n                />\n              })\n            }\n          </div>\n        </div>\n        <button onClick={nextSlide} className=\"hidden md:block text-zinc-600\">\n          <Icons.rightArrow size={36}/>\n        </button>\n      </div>\n    </Card>\n  )\n}\n\nCarousel.Item = Item\n\nexport default Carousel\n","import * as React from \"react\"\nimport { getImage, GatsbyImage, StaticImage, ImageDataLike } from \"gatsby-plugin-image\"\nimport Carousel from \"../components/Carousel\"\nimport MDXRenderer from \"../components/MDXRenderer\"\nimport Section from \"../components/Section\"\nimport Testimonial from \"../components/Testimonial\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface TestimonialQueryResult {\n  allFile: {\n    nodes: {\n      childMdx: {\n        id: string,\n        frontmatter: {\n          company: string\n          contact: string\n          role: string\n          imageAlt: string\n          image: ImageDataLike\n        }\n        body: string\n      }\n    }[]\n  }\n}\n\nconst TestimonialSection = () => {\n  const result = useStaticQuery<TestimonialQueryResult>(graphql`\n  {\n    allFile(\n      filter: {sourceInstanceName: {eq: \"testimonials\"}, extension: {eq: \"mdx\"}}\n      sort: {childMdx: {frontmatter: {slug: ASC}}}\n    ) {\n      nodes {\n        childMdx {\n          id\n          frontmatter {\n            company\n            contact\n            role\n            imageAlt\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n          body\n        }\n      }\n    }\n  }\n  `)\n  \n  return (\n    <Section.Item heading={{ title: \"What Clients Think\", subtitle: \"And colleagues, too!\" }}>\n      <Carousel>\n        {result.allFile.nodes?.map(({ childMdx }) => {\n          const image = getImage(childMdx.frontmatter.image)\n          return (\n            <Carousel.Item key={childMdx.id}>\n              <Testimonial\n                image={image \n                  ? <GatsbyImage image={image} alt={childMdx.frontmatter.imageAlt}/>\n                  : <StaticImage src=\"https://placehold.co/500/png?text=?\" alt=\"Missing testimonial image\"/>\n                }\n                contact={childMdx.frontmatter.contact}\n                role={childMdx.frontmatter.role}\n                company={childMdx.frontmatter.company}\n              >\n                <MDXRenderer>\n                  {childMdx.body}\n                </MDXRenderer>\n              </Testimonial>\n            </Carousel.Item>\n          )\n        })}\n      </Carousel>\n    </Section.Item>\n  )\n}\n\nexport default TestimonialSection","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n};\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        disabled: props.disabled,\n    }));\n    _registerProps.current = control.register(name, props.rules);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        if (get(control._fields, name)) {\n            control._updateDisabledField({\n                disabled,\n                fields: control._fields,\n                name,\n                value: get(control._fields, name)._f.value,\n            });\n        }\n    }, [disabled, name, control]);\n    return {\n        field: {\n            name,\n            value,\n            ...(isBoolean(disabled) || isBoolean(formState.disabled)\n                ? { disabled: formState.disabled || disabled }\n                : {}),\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: (elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            },\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            for (const name of control._names.mount) {\n                formData.append(name, get(data, name));\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    break;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    break;\n                }\n                else {\n                    iterateFieldsByAction(currentField, action);\n                }\n            }\n            else if (isObject(currentField)) {\n                iterateFieldsByAction(currentField, action);\n            }\n        }\n    }\n};\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = compact(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}, flushRootRender) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        errors: _options.errors || {},\n        disabled: false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\n        _subjects.state.next({\n            isValidating: value,\n        });\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = get(_formState.dirtyFields, name);\n            isCurrentFieldPristine\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n        _updateIsValidating(false);\n    };\n    const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                fieldValue &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name,\n            values: { ..._formValues },\n        });\n        !_state.mount && flushRootRender();\n    };\n    const onChange = async (event) => {\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    fieldValue === get(_formValues, name, fieldValue);\n        };\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                _proxyFormState.isValid && _updateValid();\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            _updateIsValidating(true);\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        _updateIsValidating(true);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n            isValidating: false,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ..._defaultValues,\n            ...(_state.mount ? _formValues : {}),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n        error: get((formState || _formState).errors, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, {\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const _updateDisabledField = ({ disabled, name, field, fields, value, }) => {\n        if (isBoolean(disabled)) {\n            const inputValue = disabled\n                ? undefined\n                : isUndefined(value)\n                    ? getFieldValue(field ? field._f : get(fields, name)._f)\n                    : value;\n            set(_formValues, name, inputValue);\n            updateTouchAndDirty(name, inputValue, false, false, true);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _updateDisabledField({\n                field,\n                disabled: options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                let requiredDisabledState = disabled;\n                const currentField = get(_fields, name);\n                if (currentField && isBoolean(currentField._f.disabled)) {\n                    requiredDisabledState || (requiredDisabledState = currentField._f.disabled);\n                }\n                ref.disabled = requiredDisabledState;\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            await onValid(fieldValues, e);\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, get(_defaultValues, name));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, options.defaultValue);\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, get(_defaultValues, name))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const values = formValues && !isEmptyObject(formValues)\n            ? cloneUpdatedValues\n            : _defaultValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        !_state.mount && flushRootRender();\n        _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : !!(keepStateOptions.keepDefaultValues &&\n                    !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirtyValues\n                ? _formState.dirtyFields\n                : keepStateOptions.keepDefaultValues && formValues\n                    ? getDirtyFields(_defaultValues, formValues)\n                    : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _updateDisabledField,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            _setErrors,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const _values = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        errors: props.errors || {},\n        disabled: false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n        }\n    }, [props.errors, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import * as React from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport Button from \"./Button\"\nimport Card from \"./Card\"\nimport Content from \"./Content\"\n\nconst ENDPOINT = `${process.env.API_URL}/contact`\n\nenum Status {\n  Failed,\n  Success\n}\n\ninterface Inputs {\n  contactName: string\n  contactCompany: string\n  contactEmail: string\n  contactBudget: string\n  contactDescription: string\n}\n\nconst ContactForm = () => {\n  const [status, setStatus] = React.useState<Status>()\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      isValid,\n      isDirty,\n      isSubmitting,\n    }\n  } = useForm<Inputs>()\n\n  const onSubmit = async (data: Inputs) => {\n    fetch(ENDPOINT, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n     },\n    })\n    .then(() => setStatus(Status.Success))\n    .catch((e) => {\n      console.error(\"Errors\", e)\n      setStatus(Status.Failed)\n    })\n  }\n\n  const handleReset = () => {\n    reset({}, { keepValues: true, keepIsValid: true })\n    setStatus(undefined)\n  }\n\n  return (\n    <Card>\n      {status === Status.Success\n      ? <div className=\"h-full flex flex-col justify-center p-2\">\n          <Content className=\"text-center\">\n              <h3>Contact details sent!</h3>\n              <p>\n                I'll get back to you as soon as possible, thank you!\n              </p>\n              <p>\n                Made a mistake? <a onClick={handleReset} className=\"cursor-pointer\"> Try again.</a>\n              </p>\n          </Content>\n        </div>\n      : <div>\n          {status === Status.Failed\n          ? <div className=\"text-sm 3xl:text-lg border border-red-500 m-1 p-2 text-red-500 bg-red-100\">\n              Sorry, something didn't work! Try again or email me at discovery@sidetrails.dev\n            </div>\n          : null\n          }\n          <form id=\"contact-form\" onSubmit={(e) => { console.log(\"Clicked submit\"); handleSubmit(onSubmit)(e)}} className=\"flex flex-wrap\">\n            <label className=\"w-full md:max-w-[50%] p-1\">\n              Name:\n              <input {...register(\"contactName\", { required: true })} type=\"text\" className=\"w-full p-2 rounded-md border border-zinc-400 focus:ring-lion focus:border-lion\"/>\n            </label>\n            <label className=\"w-full md:max-w-[50%] p-1\">\n              Company:\n              <input {...register(\"contactCompany\", { required: true })} type=\"text\" className=\"w-full rounded-md p-2 border border-zinc-400 focus:ring-lion focus:border-lion\"/>\n            </label>\n            <label className=\"w-full md:max-w-[50%] p-1\">\n              Email:\n              <input {...register(\"contactEmail\", { required: true })} type=\"text\" className=\"w-full rounded-md p-2 border border-zinc-400 focus:ring-lion focus:border-lion\"/>\n            </label>\n            <label className=\"w-full md:max-w-[50%] p-1\">\n              Budget:\n              <select {...register(\"contactBudget\", { required: true })} className=\"w-full rounded-md p-2 border border-zinc-400 focus:ring-lion focus:border-lion\">\n                <option>$25,000-$50,000</option>\n                <option>$50,000-$100,000</option>\n                <option>$100,000+</option>\n              </select>\n            </label>\n            <label className=\"w-full p-1\">\n              What's your project about?\n              <textarea {...register(\"contactDescription\", { required: true })} rows={10} className=\"w-full p-2 rounded-md border-zinc-400 focus:ring-lion focus:border-lion\"/>\n            </label>\n          </form>\n          <div className=\"mt-2 text-center\">\n            <Button disabled={!isValid || !isDirty || isSubmitting} label=\"Submit\" form=\"contact-form\"/>\n          </div>\n        </div>\n      }\n    </Card>\n  )\n}\n\nexport default ContactForm","import * as React from \"react\"\nimport { type HeadFC, type PageProps, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Section from \"../components/Section\"\nimport {\n  FaMicroscope as AnalysisIcon,\n  FaCompassDrafting as ArchitectureIcon,\n  FaMap as PrototypeIcon,\n  FaCode as DevelopmentIcon,\n  FaCloud as CloudIcon,\n} from \"react-icons/fa6\"\nimport {\n  BiSolidBackpack as RucksackIcon\n} from \"react-icons/bi\"\nimport { IconBaseProps } from \"react-icons\"\nimport { HorizontalOrientation } from \"../utilities/HorizontalOrientation\"\nimport Button from \"../components/Button\"\nimport Icon from \"../components/Icon\"\nimport { useLayoutControls } from \"../components/Layout\"\nimport ProcessSection from \"../sections/ProcessSection\"\nimport TestimonialSection from \"../sections/TestimonialSection\"\nimport Overlay from \"../components/Overlay\"\nimport ContactForm from \"../components/ContactForm\"\n\ninterface ExpertiseProperties {\n  title: string\n  iconType: React.ElementType<IconBaseProps>\n  iconOrientation: HorizontalOrientation\n  children: string\n}\n\nconst ExpertiseTile = ({title, iconType, iconOrientation, children}: ExpertiseProperties) => {\n  return (\n    <div\n      className={\n        `flex ${iconOrientation === HorizontalOrientation.Left ? \"flex-wrap\" : \"flex-wrap-reverse\"} justify-center\n        min-w-full md:min-w-[45%] gap-4 flex-1`\n    }\n    >\n      {iconOrientation === HorizontalOrientation.Left\n        ? <div className=\"flex flex-col justify-center\"><Icon type={iconType}/></div>\n        : null\n      }\n      <div className=\"flex flex-col flex-1 min-w-full sm:min-w-[640px] md:min-w-[128px] md:min-h-[100px] text-center gap-2\">\n        <div className=\"text-base xl:text-lg text-zinc-500\">\n          {title}\n        </div>\n        <div className=\"text-sm xl:text-base\">\n          {children}\n        </div>\n      </div>\n      {iconOrientation === HorizontalOrientation.Right\n        ? <div className=\"flex flex-col justify-center\"><Icon type={iconType}/></div>\n        : null\n      }\n    </div>\n  )\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const heroRef = React.useRef(null)\n  const { addOverlay, removeOverlay } = useLayoutControls()\n  React.useLayoutEffect(() => {\n    const hero = heroRef.current\n    if (!hero) {\n      return\n    }\n\n    addOverlay({\n      element: hero,\n      threshold: 0.95\n    })\n    return () => removeOverlay()\n  }, [heroRef])\n\n  return (\n    <>\n      <div ref={heroRef}>\n        <Overlay>\n          <StaticImage src=\"../images/hero.jpeg\" alt=\"Overhead image of a trail through a forest\" className=\"w-full h-full\"/>\n          <div className=\"relative flex flex-col items-center justify-center p-2 gap-8 xl:gap-12 3xl:gap-24 pt-20 md:pt-24 xl:pt-36 3xl:pt-48 pb-8 md:pb-12 xl:pb-14\">\n            <div className=\"flex flex-col text-center gap-4 3xl:gap-8\">\n              <div className=\"flex flex-col 3xl:gap-4 uppercase text-white/90\">\n                <p className=\"text-3xl md:text-4xl lg:text-5xl 2xl:text-6xl 3xl:text-7xl\">Side Trails</p>\n                <p className=\"text-xl md:text-2xl lg:text-3xl 2xl:text-4xl 3xl:text-5xl\">Software Development</p>\n              </div>\n              <p className=\"md:text-lg lg:text-xl 3xl:text-3xl text-zinc-200/90\">Building + Rebuilding Software Systems</p>\n            </div>\n            <Link to=\"#contact\">\n              <Button label=\"Let's Chat\" />\n            </Link>\n          </div>\n        </Overlay>\n      </div>\n      <Section.List>\n        <ProcessSection />\n        <Section.Item\n          heading={{ title: \"Expertise\", subtitle:\"Some of the things I can do.\" }}\n        >\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            <ExpertiseTile title=\"System Anaylsis\" iconType={AnalysisIcon} iconOrientation={HorizontalOrientation.Left}>\n              Develop an understanding of the breadth and depth of your system, and the relationships and interactions between the various parts.\n            </ExpertiseTile>\n            <ExpertiseTile title=\"System Architecture\" iconType={ArchitectureIcon} iconOrientation={HorizontalOrientation.Right}>\n              Design solutions that incorporate and consider all aspects of a system.\n            </ExpertiseTile>\n            <ExpertiseTile title=\"Software Prototyping\" iconType={PrototypeIcon} iconOrientation={HorizontalOrientation.Left}>\n              Exploratory software development to better understand the solution you want, and need.\n            </ExpertiseTile>\n            <ExpertiseTile title=\"Software Design and Development\" iconType={DevelopmentIcon} iconOrientation={HorizontalOrientation.Right}>\n              Implement well-designed code and abstractions to enable future growth while reducing maintenance and development overhead.\n            </ExpertiseTile>\n            <ExpertiseTile title=\"Cloud Integration\" iconType={CloudIcon} iconOrientation={HorizontalOrientation.Left}>\n              Introduce new cloud services into existing systems or processes, or migrate existing non-cloud systems to the cloud.\n            </ExpertiseTile>\n            <ExpertiseTile title=\"Rucksack\" iconType={RucksackIcon} iconOrientation={HorizontalOrientation.Right}>\n              Java, JavaScript/TypeScript, React, MySQL/SQL, AWS, and more…\n            </ExpertiseTile>\n          </div>\n        </Section.Item>\n        <TestimonialSection />\n        <Section.Item\n          anchor=\"contact\"\n          heading={{ title: \"Let's Chat\", subtitle: \"Need help with a project? Send me some details.\" }}\n        >\n          <ContactForm/>\n        </Section.Item>\n      </Section.List>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home - Side Trails Software Development</title>\n"],"names":["_ref","image","contact","role","company","children","React","className","Overlay","LeftQuote","RightQuote","Content","HorizontalOrientation","form","disabled","label","onClick","type","Icon","size","ListCard","title","Card","heading","Item","_ref2","imageOrientation","ItemImage","Left","Right","ProcessTile","text","subtext","Section","subtitle","StaticImage","src","alt","objectFit","V","toVector","v","fallback","undefined","Array","isArray","add","v1","v2","sub","addTo","subTo","rubberband","distance","dimension","constant","Math","abs","Infinity","pow","rubberbandIfOutOfBounds","position","min","max","clamp","_toPropertyKey","arg","key","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","EVENT_TYPE_MAP","pointer","start","change","end","mouse","touch","gesture","capitalize","string","toUpperCase","slice","actionsWithoutCaptureSupported","toHandlerProp","device","action","capture","deviceProps","actionKey","includes","hasCapture","pointerCaptureEvents","parseProp","prop","eventKey","substring","toLowerCase","passive","indexOf","replace","captureKey","isTouch","event","getPointerType","pointerType","getValueEvent","changedTouches","targetTouches","getTouchList","touchIds","from","touches","_event$currentTarget","_event$currentTarget$","target","currentTarget","contains","getCurrentTargetTouchList","map","identifier","pointerId","valueEvent","pointerValues","clientX","clientY","args","noop","chain","fns","result","fn","this","assignDefault","assign","Engine","constructor","ctrl","state","computeValues","computeInitial","init","reset","shared","eventStore","gestureEventStores","timeoutStore","gestureTimeoutStores","config","sharedConfig","handler","handlers","ingKey","_active","active","_blocked","_force","_step","intentional","_movement","_distance","_direction","_delta","_bounds","axis","memo","elapsedTime","timeDelta","direction","overflow","_movementBound","velocity","movement","delta","timeStamp","lastOffset","offset","startTime","values","_values","transform","_initial","initial","compute","dt","preventDefault","cancelable","pointerIds","locked","document","pointerLockElement","payload","buttons","shiftKey","altKey","metaKey","ctrlKey","getEventDetails","down","pressed","_absoluteDelta","axisIntent","_m0","_m1","t0","t1","threshold","hasCustomTransform","sign","v0","restrictToAxis","previousOffset","gestureIsActive","first","last","bounds","setup","computeOffset","ox","oy","x0","x1","y0","y1","Vx","Vy","Rx","Ry","X0","X1","Y0","Y1","computeRubberband","computeMovement","absoluteDelta","emit","clean","triggerAllEvents","aliasKey","CoordinatesEngine","super","axisThreshold","dx","dy","absDx","absDy","selectAxis","lockDirection","identity","commonConfigResolver","enabled","eventOptions","_k","coordinatesConfigResolver","_v","current","HTMLElement","left","right","top","bottom","KEYS_DELTA_MAP","ArrowRight","displacement","factor","ArrowLeft","ArrowUp","ArrowDown","isBrowser","window","createElement","supportsTouchEvents","SUPPORT","GestureEvent","supportsGestureEvents","touchscreen","navigator","maxTouchPoints","pointerLock","DEFAULT_DRAG_AXIS_THRESHOLD","pen","dragConfigResolver","lock","preventScrollAxis","preventScroll","preventScrollDelay","pointerCapture","pointerButtons","filterTaps","tapsThreshold","swipe","duration","delay","keyboardDisplacement","scaleBounds","angleBounds","_scaleBounds","D","_angleBounds","A","modifierKey","pinchOnWheel","mouseOnly","Map","ConfigResolverMap","engine","_pointerId","_pointerActive","_keyboardActive","_preventScroll","_delayed","tap","canceled","cancel","bind","boundRect","getBoundingClientRect","targetRect","setTimeout","setActive","pointerClean","pointerDown","ctrlIds","setEventIds","setPointerCapture","setupPointer","setupScrollPrevention","setupDelayTrigger","startPointerDrag","pointerMove","id","movementX","movementY","remove","pointerUp","hasPointerCapture","releasePointerCapture","_unused","_dx","_dy","_mx","_my","svx","svy","sx","sy","sdt","_vx","_vy","pointerClick","detail","stopPropagation","requestPointerLock","exitPointerLock","persist","persistEvent","keyDown","deltaFn","keyUp","bindFunction","resolver","_objectWithoutProperties","source","excluded","i","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","sharedConfigResolver","_excluded","resolveWith","resolvers","entries","EventStore","gestureKey","Set","_ctrl","_gestureKey","element","options","listeners","_listeners","toDomEventType","addEventListener","removeEventListener","delete","clear","TimeoutStore","callback","ms","_timeouts","set","timeout","get","clearTimeout","Controller","internalHandlers","drag","setupGesture","wheel","scroll","move","pinch","hover","resolveGestures","applyHandlers","nativeHandlers","applyConfig","newConfig","_config","rest","parse","_targetEventStore","gestures","effect","props","gestureConfig","bindToProps","nativeBindFunction","handlerProp","withPassiveOption","isNative","_options$capture","_options$passive","useRecognizers","useDrag","Carousel","currentIndex","setCurrentIndex","carouselRef","previousSlide","nextSlide","_ref3","mx","xDir","carousel","offsetWidth","ref","Icons","leftArrow","style","child","index","_","rightArrow","useStaticQuery","allFile","nodes","_result$allFile$nodes","childMdx","getImage","frontmatter","Testimonial","GatsbyImage","imageAlt","__imageData","MDXRenderer","body","isCheckBoxInput","isDateObject","Date","isNullOrUndefined","isObjectType","isObject","getEventValue","checked","isNameInFieldArray","names","name","has","search","getNodeParentName","isPlainObject","tempObject","prototypeCopy","hasOwnProperty","isWeb","cloneObject","data","copy","Blob","FileList","compact","Boolean","isUndefined","val","object","path","defaultValue","split","reduce","isBoolean","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","_key","_proxyFormState","isEmptyObject","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","useSubscribe","_props","subscription","subject","subscribe","next","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","fieldName","watchAll","isKey","test","stringToPath","tempPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","errors","message","types","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","some","watchName","startsWith","iterateFieldsByAction","fields","fieldsNames","abortEarly","field","_f","currentField","refs","updateFieldArrayRootError","error","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","isValid","validResult","getCheckboxValue","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","async","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","unset","paths","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","observers","observer","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","NaN","getFieldValue","files","selectedOptions","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","flushRootRender","delayErrorCallback","_options","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_state","unMount","array","timer","_subjects","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","_updateValid","shouldUpdateValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","updatedFormState","context","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","_getWatch","fieldReference","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","isFieldValueUpdated","_updateIsFieldValueUpdated","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","_focusInput","focus","fieldNames","executeSchemaAndUpdateState","Promise","shouldFocus","getFieldState","invalid","setError","unregister","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","_updateDisabledField","register","disabledIsDefined","progressive","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","fieldValues","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","closest","keepSubmitCount","keepIsSubmitted","keepErrors","keepIsSubmitSuccessful","_removeUnmounted","_updateFieldArray","method","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","_getFieldArray","_resetDefaultValues","then","_updateFormState","_disableForm","requiredDisabledState","_setErrors","resetField","clearErrors","inputName","setFocus","shouldSelect","select","Status","status","setStatus","_formControl","useForm","fetch","process","JSON","stringify","headers","Success","catch","console","Failed","log","rows","Button","ExpertiseTile","iconType","iconOrientation","heroRef","addOverlay","removeOverlay","useLayoutControls","hero","Link","to","List","ProcessSection","AnalysisIcon","ArchitectureIcon","PrototypeIcon","DevelopmentIcon","CloudIcon","RucksackIcon","TestimonialSection","anchor","ContactForm","Head"],"sourceRoot":""}