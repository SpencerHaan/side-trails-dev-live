{"version":3,"file":"component---src-pages-philosophy-tsx-1971afca5fda03285def.js","mappings":"qKAoBA,IAbaA,IAA4C,IAA3C,QAAEC,EAAO,SAAEC,GAA0B,EACjD,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2GACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gDACZH,GAEHE,EAAAA,cAAAA,MAAAA,KACGD,GAEC,C,8JCJV,MAOMG,EAAML,IAA8D,IAA7D,SAAEM,EAAQ,QAAEC,EAAO,QAAEC,EAAO,SAAEN,GAAyB,EAClE,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,sBAAsBG,QAASA,GAC5CJ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBACZI,GAEHL,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8FACZE,EACGH,EAAAA,cAACM,EAAAA,IAAO,MACRN,EAAAA,cAACO,EAAAA,IAAS,QAIlBP,EAAAA,cAACQ,EAAAA,EAAW,CAACL,SAAUA,GACrBH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,4BACZF,IAGD,EAQJU,EAAYC,IAA6C,IAA5C,SAAEX,EAAW,IAAyB,EACvDA,EAAWY,MAAMC,QAAQb,GAAYA,EAAW,CAACA,GAEjD,MAAOc,EAAeC,GAAoBd,EAAAA,SAA8B,MAYxE,OACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACZF,EAASgB,KAAI,CAACC,EAAOC,KAAMjB,SAAAA,cAACE,EAAG,eAACgB,IAAKD,EAAGd,UAZzBgB,EAY8CF,EAXzDE,IAAUN,GAWmDT,QAAS,IATzDe,KAElBL,EADEK,IAAUN,EACK,KAEAM,EACnB,EAImFC,CAAaH,IAAQD,EAAMK,QAZ5FF,KAYoG,IAChH,EAIVV,EAAUa,KAxDIC,GAA2B,KA0DzC,Q,UC/DA,MAAMC,EAAmB3B,IAA2D,IAA1D,QAAE4B,EAAO,MAAEC,GAA0C,EAC7E,OACE1B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0DACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0IACZwB,GAEHzB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8FACZyB,GAEC,EA0DV,MAtDwC,KACtC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,aAmB5B,OACE5B,EAAAA,cAAC6B,EAAAA,EAAO,CAAC/B,QAAS,CAAEgC,MAAO,aAAcC,SAAU,CAAC,qDAAwD,0BAC1G/B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uDACbD,EAAAA,cAAAA,IAAAA,KAAG,OACG,qBAAGgC,KAAK,8BAA8BC,OAAO,UAAS,mBAAmB,kFAE/EjC,EAAAA,cAAAA,IAAAA,KAAG,uLAGHA,EAAAA,cAAAA,IAAAA,KAAG,2DAILA,EAAAA,cAACkC,EAAAA,EAAI,CAACpC,QAAQ,cACZE,EAAAA,cAACS,EAAS,KACNkB,EAAKQ,QAAQC,MAAMrB,KAAI,CAAC,EAAmBE,KAAc,IAAjC,SAAEoB,GAAe,EACzC,MAAM,GAAEC,EAAE,KAAEC,EAAMC,aAAa,MAAEV,IAAYO,EAC7C,OACErC,EAAAA,cAACS,EAAUa,KAAI,CACbJ,IAAKoB,EACLjC,QAASL,EAAAA,cAACwB,EAAgB,CAACC,QAASR,EAAI,EAAGS,MAAOI,KAElD9B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uDACbD,EAAAA,cAACyC,EAAAA,EAAW,KAAEF,IAED,MAKjB,EAMP,MAAMG,EAAe,IAAM1C,EAAAA,cAAAA,QAAAA,KAAO,gD","sources":["webpack://side-trail-software-development/./src/components/Card.tsx","webpack://side-trail-software-development/./src/components/Accordion.tsx","webpack://side-trail-software-development/./src/pages/philosophy.tsx"],"sourcesContent":["import * as React from \"react\"\n\ninterface CardProperties {\n  heading?: string\n  children?: React.ReactElement | React.ReactElement[]\n}\n\nconst Card = ({ heading, children }: CardProperties) => {\n  return (\n    <div className=\"px-2 py-4 md:p-4 xl:p-8 space-y-4 rounded-lg md:rounded-xl drop-shadow-md md:drop-shadow-lg bg-zinc-100\">\n      <div className=\"text-center text-xl md:text-2xl 3xl:text-4xl\">\n        {heading}\n      </div>\n      <div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import * as React from \"react\"\nimport {\n  TbSquareRoundedChevronUpFilled as UpArrow,\n  TbSquareRoundedChevronDownFilled as DownArrow,\n} from \"react-icons/tb\"\nimport Collapsible from \"./Collapsible\"\n\ninterface ItemProperties {\n  summary: string | React.ReactElement\n  children?: string | React.ReactElement | React.ReactElement[]\n}\n\nconst Item = (_props: ItemProperties) => null\n\ninterface RowProperties extends ItemProperties {\n  expanded: boolean\n  onClick: () => void\n}\n\nconst Row = ({ expanded, onClick, summary, children }: RowProperties) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex flex-row gap-2\" onClick={onClick}>\n        <div className=\"flex-1 md:text-xl\">\n          {summary}\n        </div>\n        <div className=\"m-auto text-2xl md:text-3xl text-zinc-600 cursor-pointer transition-transform duration-200\">\n          {expanded\n            ? <UpArrow/>\n            : <DownArrow/>\n          }\n        </div>\n      </div>\n      <Collapsible expanded={expanded}>\n        <div className=\"p-2 text-sm md:text-base\">\n          {children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n\ninterface AccordionProperties {\n  children?: React.ReactElement<ItemProperties>| React.ReactElement<ItemProperties>[]\n}\n\nconst Accordion = ({ children = [] }: AccordionProperties) => {\n  children = Array.isArray(children) ? children : [children]\n  \n  const [expandedIndex, setExpandedIndex] = React.useState<number | null>(null)\n\n  const isExpanded = (index: number) => {\n    return index === expandedIndex\n  }\n  const clickHandler = (index: number) => {\n    if (index === expandedIndex) {\n      setExpandedIndex(null)\n    } else {\n      setExpandedIndex(index)\n    }\n  }\n  return (\n    <div className=\"flex flex-col gap-1\">\n      {children.map((child, i) => <Row key={i} expanded={isExpanded(i)} onClick={() => clickHandler(i)} {...child.props}/>)}\n    </div>\n  )\n}\n\nAccordion.Item = Item\n\nexport default Accordion","import * as React from \"react\"\nimport { useStaticQuery, type HeadFC, type PageProps, graphql } from \"gatsby\"\nimport Section from \"../components/Section\"\nimport Card from \"../components/Card\"\nimport Accordion from \"../components/Accordion\"\nimport MDXRenderer from \"../components/MDXRenderer\"\n\nconst PrincipleSummary = ({ ordinal, value}: { ordinal: number, value: string }) => {\n  return (\n    <div className=\"flex flex-row gap-3 md:gap-4 items-center min-h-[72px]\">\n      <div className=\"flex flex-col text-center justify-center w-8 h-8 lg:w-10 lg:h-10 p-2 rounded-xl lg:rounded-2xl font-extrabold bg-zinc-500 text-zinc-50\">\n        {ordinal}\n      </div>\n      <div className=\"flex flex-col flex-1 justify-center text-sm md:text-lg xl:text-xl text-center md:text-left\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\nconst Philosophy: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    allFile(\n      filter: {sourceInstanceName: {eq: \"principles\"}}\n      sort: {childMdx: {frontmatter: {slug: ASC}}}\n    ) {\n      nodes {\n        childMdx {\n          id\n          frontmatter {\n            title\n          }\n          body\n        }\n      }\n    }\n  }`\n  )\n\n  return (\n    <Section heading={{ title: \"Philosophy\", subtitle: [\"\\\"Plans are worthless, but planning is everything.\\\"\", \"Dwight D. Eisenhower\"] }}>\n      <div className=\"max-w-none prose prose-sm md:prose-base xl:prose-lg\">\n        <p>\n          The <a href=\"https://agilemanifesto.org/\" target=\"_blank\">Agile Manifesto</a> was created in the early 2000s by prominent members of the software industry.\n        </p>\n        <p>\n          This manifesto is what underpins many of the agile processes common in the software industry today, but I believe these processes misunderstand the intention behind the manifesto.\n        </p>\n        <p>\n          Instead, I choose to follow these principles directly.\n        </p>\n      </div>\n      <Card heading=\"Principles\">\n        <Accordion>\n          { data.allFile.nodes.map(({ childMdx }: any, i: number) => {\n            const { id, body, frontmatter: { title } } = childMdx\n            return (\n              <Accordion.Item\n                key={id}\n                summary={<PrincipleSummary ordinal={i + 1} value={title}/>}\n              >\n                <div className=\"max-w-none prose prose-sm md:prose-base xl:prose-lg\">\n                  <MDXRenderer>{body}</MDXRenderer>\n                </div>\n              </Accordion.Item>\n            )\n          })}\n        </Accordion>\n      </Card>\n    </Section>\n  )\n}\n\nexport default Philosophy\n\nexport const Head: HeadFC = () => <title>Philosophy - Side Trails Software Development</title>"],"names":["_ref","heading","children","React","className","Row","expanded","onClick","summary","UpArrow","DownArrow","Collapsible","Accordion","_ref2","Array","isArray","expandedIndex","setExpandedIndex","map","child","i","key","index","clickHandler","props","Item","_props","PrincipleSummary","ordinal","value","data","useStaticQuery","Section","title","subtitle","href","target","Card","allFile","nodes","childMdx","id","body","frontmatter","MDXRenderer","Head"],"sourceRoot":""}