{"version":3,"file":"component---src-pages-philosophy-tsx-89af557d30b1848d6977.js","mappings":"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","sources":["webpack://side-trail-software-development/./src/components/Accordion.tsx","webpack://side-trail-software-development/./src/pages/philosophy.tsx"],"sourcesContent":["import * as React from \"react\"\nimport {\n  TbSquareRoundedChevronUpFilled as UpArrow,\n  TbSquareRoundedChevronDownFilled as DownArrow,\n} from \"react-icons/tb\"\nimport Collapsible from \"./Collapsible\"\n\ninterface ItemProperties {\n  summary: string | React.ReactElement\n  children?: string | React.ReactElement | React.ReactElement[]\n}\n\nconst Item = (_props: ItemProperties) => null\n\ninterface RowProperties extends ItemProperties {\n  expanded: boolean\n  onClick: () => void\n}\n\nconst Row = ({ expanded, onClick, summary, children }: RowProperties) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex flex-row gap-2\" onClick={onClick}>\n        <div className=\"flex-1 md:text-xl\">\n          {summary}\n        </div>\n        <div className=\"m-auto text-2xl md:text-3xl text-zinc-600 cursor-pointer transition-transform duration-200\">\n          {expanded\n            ? <UpArrow/>\n            : <DownArrow/>\n          }\n        </div>\n      </div>\n      <Collapsible expanded={expanded}>\n        <div className=\"p-2 text-sm md:text-base\">\n          {children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n\ninterface AccordionProperties {\n  children?: React.ReactElement<ItemProperties>[]\n}\n\nconst Accordion = ({ children }: AccordionProperties) => {\n  const [expandedIndex, setExpandedIndex] = React.useState<number | null>(null)\n\n  const isExpanded = (index: number) => {\n    return index === expandedIndex\n  }\n  const clickHandler = (index: number) => {\n    if (index === expandedIndex) {\n      setExpandedIndex(null)\n    } else {\n      setExpandedIndex(index)\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col p-2 md:p-4 gap-1\">\n      { children ? children.map((child, i) => <Row key={i} expanded={isExpanded(i)} onClick={() => clickHandler(i)} {...child.props}/>) : null }\n    </div>\n  )\n}\n\nAccordion.Item = Item\n\nexport default Accordion","import * as React from \"react\"\nimport { useStaticQuery, type HeadFC, type PageProps, graphql } from \"gatsby\"\nimport Section from \"../components/Section\"\nimport Card from \"../components/Card\"\nimport Accordion from \"../components/Accordion\"\nimport MDXRenderer from \"../components/MDXRenderer\"\n\nconst PrincipleSummary = ({ ordinal, value}: { ordinal: string, value: string }) => {\n  return (\n    <div className=\"flex flex-row gap-3 md:gap-4 items-center min-h-[72px]\">\n      <div className=\"flex flex-col text-center justify-center w-8 h-8 lg:w-10 lg:h-10 p-2 rounded-xl lg:rounded-2xl font-extrabold bg-zinc-500 text-zinc-50\">\n        {ordinal}\n      </div>\n      <div className=\"flex flex-col flex-1 justify-center text-sm md:text-lg xl:text-xl text-center md:text-left\">\n        {value}\n      </div>\n    </div>\n  )\n}\n\nconst PrincipleBody = ({ ideas, value }: { ideas: string[], value: string }) => {\n  return (\n    <>\n      <div className=\"flex flex-col gap-4\">\n        <div>\n          <div className=\"text-base lg:text-lg pb-2\">\n            Core Ideas:\n          </div>\n          <ul className=\"pl-6 list-disc\">\n            {ideas.map((idea, i) => (\n              <li key={i}>{idea}</li>\n            ))}\n          </ul>\n        </div>\n        <MDXRenderer>{value}</MDXRenderer>\n      </div>\n    </>\n  )\n}\n\nconst Philosophy: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n  query PrinciplesQuery {\n    allFile(\n      filter: {sourceInstanceName: {eq: \"principles\"}}\n      sort: {childMdx: {frontmatter: {ordinal: ASC}}}\n    ) {\n      nodes {\n        childMdx {\n          frontmatter {\n            ordinal\n            principle\n            ideas\n          }\n          body\n        }\n      }\n    }\n  }`\n  )\n\n  return (\n    <Section title=\"Philosophy\" subtitle={[<p>\"Plans are worthless, but planning is everything.\"</p>, <p>Dwight D. Eisenhower</p>]}>\n      <p className=\"text-justify\">\n        The <a href=\"https://agilemanifesto.org/\" target=\"_blank\" className=\"text-lion\">Agile Manifesto</a> was created in the early 2000s by prominent members of the software industry, such as Martin Fowler. This manifesto is what underpins many of the agile processes common in the software industry today, but I believe these existing processes misunderstand the intention behind the manifesto. Instead, I choose to follow these principles directly.\n      </p>\n      <Card>\n        <div className=\"text-center text-xl md:text-3xl 3xl:text-4xl\">\n          Principles\n        </div>\n        <Accordion>\n          { data.allFile.nodes.map(({ childMdx }: any) => {\n            const { body, frontmatter } = childMdx\n            const { ordinal, principle, ideas } = frontmatter\n            return (\n              <Accordion.Item\n                key={ordinal}\n                summary={<PrincipleSummary ordinal={ordinal} value={principle}/>}\n              >\n                <PrincipleBody ideas={ideas} value={body}/>\n              </Accordion.Item>\n            )\n          })}\n        </Accordion>\n      </Card>\n    </Section>\n  )\n}\n\nexport default Philosophy\n\nexport const Head: HeadFC = () => <title>Philosophy - Side Trails Software Development</title>"],"names":["Row","_ref","expanded","onClick","summary","children","React","className","UpArrow","DownArrow","Collapsible","Accordion","_ref2","expandedIndex","setExpandedIndex","map","child","i","key","index","clickHandler","props","Item","_props","PrincipleSummary","ordinal","value","PrincipleBody","ideas","idea","MDXRenderer","data","useStaticQuery","Section","title","subtitle","href","target","Card","allFile","nodes","_ref3","childMdx","body","frontmatter","principle","Head"],"sourceRoot":""}